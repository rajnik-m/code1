'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.269
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
'
Namespace WebAccess
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WebAccessSoap", [Namespace]:="http://care.co.uk/webservices/")>  _
    Partial Public Class WebAccess
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private AddWebInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddWebMenuOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddWebMenuItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddWebPageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddWebPageItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddWebPageUserControlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteWebMenuOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteWebMenuItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteWebPageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteWebPageItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportWebDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SelectWebDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateWebMenuOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateWebMenuItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateWebPageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateWebInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateWebPageItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateWebPageItemControlsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateWebPageItemDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateWebPageUserControlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CareDocumentation.My.MySettings.Default.CareDocumentation_WebAccess_WebAccess
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event AddWebInfoCompleted As AddWebInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event AddWebMenuCompleted As AddWebMenuCompletedEventHandler
        
        '''<remarks/>
        Public Event AddWebMenuItemCompleted As AddWebMenuItemCompletedEventHandler
        
        '''<remarks/>
        Public Event AddWebPageCompleted As AddWebPageCompletedEventHandler
        
        '''<remarks/>
        Public Event AddWebPageItemCompleted As AddWebPageItemCompletedEventHandler
        
        '''<remarks/>
        Public Event AddWebPageUserControlCompleted As AddWebPageUserControlCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteWebMenuCompleted As DeleteWebMenuCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteWebMenuItemCompleted As DeleteWebMenuItemCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteWebPageCompleted As DeleteWebPageCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteWebPageItemCompleted As DeleteWebPageItemCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportWebDataCompleted As ImportWebDataCompletedEventHandler
        
        '''<remarks/>
        Public Event SelectWebDataCompleted As SelectWebDataCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateWebMenuCompleted As UpdateWebMenuCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateWebMenuItemCompleted As UpdateWebMenuItemCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateWebPageCompleted As UpdateWebPageCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateWebInfoCompleted As UpdateWebInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateWebPageItemCompleted As UpdateWebPageItemCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateWebPageItemControlsCompleted As UpdateWebPageItemControlsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateWebPageItemDataCompleted As UpdateWebPageItemDataCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateWebPageUserControlCompleted As UpdateWebPageUserControlCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/AddWebInfo", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddWebInfo(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("AddWebInfo", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddWebInfoAsync(ByVal pXMLParams As String)
            Me.AddWebInfoAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddWebInfoAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.AddWebInfoOperationCompleted Is Nothing) Then
                Me.AddWebInfoOperationCompleted = AddressOf Me.OnAddWebInfoOperationCompleted
            End If
            Me.InvokeAsync("AddWebInfo", New Object() {pXMLParams}, Me.AddWebInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddWebInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddWebInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddWebInfoCompleted(Me, New AddWebInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/AddWebMenu", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddWebMenu(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("AddWebMenu", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddWebMenuAsync(ByVal pXMLParams As String)
            Me.AddWebMenuAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddWebMenuAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.AddWebMenuOperationCompleted Is Nothing) Then
                Me.AddWebMenuOperationCompleted = AddressOf Me.OnAddWebMenuOperationCompleted
            End If
            Me.InvokeAsync("AddWebMenu", New Object() {pXMLParams}, Me.AddWebMenuOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddWebMenuOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddWebMenuCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddWebMenuCompleted(Me, New AddWebMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/AddWebMenuItem", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddWebMenuItem(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("AddWebMenuItem", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddWebMenuItemAsync(ByVal pXMLParams As String)
            Me.AddWebMenuItemAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddWebMenuItemAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.AddWebMenuItemOperationCompleted Is Nothing) Then
                Me.AddWebMenuItemOperationCompleted = AddressOf Me.OnAddWebMenuItemOperationCompleted
            End If
            Me.InvokeAsync("AddWebMenuItem", New Object() {pXMLParams}, Me.AddWebMenuItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddWebMenuItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddWebMenuItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddWebMenuItemCompleted(Me, New AddWebMenuItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/AddWebPage", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddWebPage(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("AddWebPage", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddWebPageAsync(ByVal pXMLParams As String)
            Me.AddWebPageAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddWebPageAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.AddWebPageOperationCompleted Is Nothing) Then
                Me.AddWebPageOperationCompleted = AddressOf Me.OnAddWebPageOperationCompleted
            End If
            Me.InvokeAsync("AddWebPage", New Object() {pXMLParams}, Me.AddWebPageOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddWebPageOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddWebPageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddWebPageCompleted(Me, New AddWebPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/AddWebPageItem", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddWebPageItem(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("AddWebPageItem", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddWebPageItemAsync(ByVal pXMLParams As String)
            Me.AddWebPageItemAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddWebPageItemAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.AddWebPageItemOperationCompleted Is Nothing) Then
                Me.AddWebPageItemOperationCompleted = AddressOf Me.OnAddWebPageItemOperationCompleted
            End If
            Me.InvokeAsync("AddWebPageItem", New Object() {pXMLParams}, Me.AddWebPageItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddWebPageItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddWebPageItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddWebPageItemCompleted(Me, New AddWebPageItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/AddWebPageUserControl", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddWebPageUserControl(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("AddWebPageUserControl", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddWebPageUserControlAsync(ByVal pXMLParams As String)
            Me.AddWebPageUserControlAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddWebPageUserControlAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.AddWebPageUserControlOperationCompleted Is Nothing) Then
                Me.AddWebPageUserControlOperationCompleted = AddressOf Me.OnAddWebPageUserControlOperationCompleted
            End If
            Me.InvokeAsync("AddWebPageUserControl", New Object() {pXMLParams}, Me.AddWebPageUserControlOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddWebPageUserControlOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddWebPageUserControlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddWebPageUserControlCompleted(Me, New AddWebPageUserControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/DeleteWebMenu", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteWebMenu(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("DeleteWebMenu", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteWebMenuAsync(ByVal pXMLParams As String)
            Me.DeleteWebMenuAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteWebMenuAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.DeleteWebMenuOperationCompleted Is Nothing) Then
                Me.DeleteWebMenuOperationCompleted = AddressOf Me.OnDeleteWebMenuOperationCompleted
            End If
            Me.InvokeAsync("DeleteWebMenu", New Object() {pXMLParams}, Me.DeleteWebMenuOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteWebMenuOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteWebMenuCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteWebMenuCompleted(Me, New DeleteWebMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/DeleteWebMenuItem", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteWebMenuItem(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("DeleteWebMenuItem", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteWebMenuItemAsync(ByVal pXMLParams As String)
            Me.DeleteWebMenuItemAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteWebMenuItemAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.DeleteWebMenuItemOperationCompleted Is Nothing) Then
                Me.DeleteWebMenuItemOperationCompleted = AddressOf Me.OnDeleteWebMenuItemOperationCompleted
            End If
            Me.InvokeAsync("DeleteWebMenuItem", New Object() {pXMLParams}, Me.DeleteWebMenuItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteWebMenuItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteWebMenuItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteWebMenuItemCompleted(Me, New DeleteWebMenuItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/DeleteWebPage", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteWebPage(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("DeleteWebPage", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteWebPageAsync(ByVal pXMLParams As String)
            Me.DeleteWebPageAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteWebPageAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.DeleteWebPageOperationCompleted Is Nothing) Then
                Me.DeleteWebPageOperationCompleted = AddressOf Me.OnDeleteWebPageOperationCompleted
            End If
            Me.InvokeAsync("DeleteWebPage", New Object() {pXMLParams}, Me.DeleteWebPageOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteWebPageOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteWebPageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteWebPageCompleted(Me, New DeleteWebPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/DeleteWebPageItem", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteWebPageItem(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("DeleteWebPageItem", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteWebPageItemAsync(ByVal pXMLParams As String)
            Me.DeleteWebPageItemAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteWebPageItemAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.DeleteWebPageItemOperationCompleted Is Nothing) Then
                Me.DeleteWebPageItemOperationCompleted = AddressOf Me.OnDeleteWebPageItemOperationCompleted
            End If
            Me.InvokeAsync("DeleteWebPageItem", New Object() {pXMLParams}, Me.DeleteWebPageItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteWebPageItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteWebPageItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteWebPageItemCompleted(Me, New DeleteWebPageItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/ImportWebData", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImportWebData(ByVal pXMLParams As String, ByVal pImportData As String) As String
            Dim results() As Object = Me.Invoke("ImportWebData", New Object() {pXMLParams, pImportData})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportWebDataAsync(ByVal pXMLParams As String, ByVal pImportData As String)
            Me.ImportWebDataAsync(pXMLParams, pImportData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportWebDataAsync(ByVal pXMLParams As String, ByVal pImportData As String, ByVal userState As Object)
            If (Me.ImportWebDataOperationCompleted Is Nothing) Then
                Me.ImportWebDataOperationCompleted = AddressOf Me.OnImportWebDataOperationCompleted
            End If
            Me.InvokeAsync("ImportWebData", New Object() {pXMLParams, pImportData}, Me.ImportWebDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportWebDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportWebDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportWebDataCompleted(Me, New ImportWebDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/SelectWebData", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SelectWebData(ByVal pSelectDataType As XMLWebDataSelectionTypes, ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("SelectWebData", New Object() {pSelectDataType, pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SelectWebDataAsync(ByVal pSelectDataType As XMLWebDataSelectionTypes, ByVal pXMLParams As String)
            Me.SelectWebDataAsync(pSelectDataType, pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SelectWebDataAsync(ByVal pSelectDataType As XMLWebDataSelectionTypes, ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.SelectWebDataOperationCompleted Is Nothing) Then
                Me.SelectWebDataOperationCompleted = AddressOf Me.OnSelectWebDataOperationCompleted
            End If
            Me.InvokeAsync("SelectWebData", New Object() {pSelectDataType, pXMLParams}, Me.SelectWebDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnSelectWebDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.SelectWebDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SelectWebDataCompleted(Me, New SelectWebDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/UpdateWebMenu", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateWebMenu(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("UpdateWebMenu", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateWebMenuAsync(ByVal pXMLParams As String)
            Me.UpdateWebMenuAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateWebMenuAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.UpdateWebMenuOperationCompleted Is Nothing) Then
                Me.UpdateWebMenuOperationCompleted = AddressOf Me.OnUpdateWebMenuOperationCompleted
            End If
            Me.InvokeAsync("UpdateWebMenu", New Object() {pXMLParams}, Me.UpdateWebMenuOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateWebMenuOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateWebMenuCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateWebMenuCompleted(Me, New UpdateWebMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/UpdateWebMenuItem", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateWebMenuItem(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("UpdateWebMenuItem", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateWebMenuItemAsync(ByVal pXMLParams As String)
            Me.UpdateWebMenuItemAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateWebMenuItemAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.UpdateWebMenuItemOperationCompleted Is Nothing) Then
                Me.UpdateWebMenuItemOperationCompleted = AddressOf Me.OnUpdateWebMenuItemOperationCompleted
            End If
            Me.InvokeAsync("UpdateWebMenuItem", New Object() {pXMLParams}, Me.UpdateWebMenuItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateWebMenuItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateWebMenuItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateWebMenuItemCompleted(Me, New UpdateWebMenuItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/UpdateWebPage", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateWebPage(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("UpdateWebPage", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateWebPageAsync(ByVal pXMLParams As String)
            Me.UpdateWebPageAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateWebPageAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.UpdateWebPageOperationCompleted Is Nothing) Then
                Me.UpdateWebPageOperationCompleted = AddressOf Me.OnUpdateWebPageOperationCompleted
            End If
            Me.InvokeAsync("UpdateWebPage", New Object() {pXMLParams}, Me.UpdateWebPageOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateWebPageOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateWebPageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateWebPageCompleted(Me, New UpdateWebPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/UpdateWebInfo", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateWebInfo(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("UpdateWebInfo", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateWebInfoAsync(ByVal pXMLParams As String)
            Me.UpdateWebInfoAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateWebInfoAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.UpdateWebInfoOperationCompleted Is Nothing) Then
                Me.UpdateWebInfoOperationCompleted = AddressOf Me.OnUpdateWebInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateWebInfo", New Object() {pXMLParams}, Me.UpdateWebInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateWebInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateWebInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateWebInfoCompleted(Me, New UpdateWebInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/UpdateWebPageItem", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateWebPageItem(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("UpdateWebPageItem", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateWebPageItemAsync(ByVal pXMLParams As String)
            Me.UpdateWebPageItemAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateWebPageItemAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.UpdateWebPageItemOperationCompleted Is Nothing) Then
                Me.UpdateWebPageItemOperationCompleted = AddressOf Me.OnUpdateWebPageItemOperationCompleted
            End If
            Me.InvokeAsync("UpdateWebPageItem", New Object() {pXMLParams}, Me.UpdateWebPageItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateWebPageItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateWebPageItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateWebPageItemCompleted(Me, New UpdateWebPageItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/UpdateWebPageItemControls", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateWebPageItemControls(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("UpdateWebPageItemControls", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateWebPageItemControlsAsync(ByVal pXMLParams As String)
            Me.UpdateWebPageItemControlsAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateWebPageItemControlsAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.UpdateWebPageItemControlsOperationCompleted Is Nothing) Then
                Me.UpdateWebPageItemControlsOperationCompleted = AddressOf Me.OnUpdateWebPageItemControlsOperationCompleted
            End If
            Me.InvokeAsync("UpdateWebPageItemControls", New Object() {pXMLParams}, Me.UpdateWebPageItemControlsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateWebPageItemControlsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateWebPageItemControlsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateWebPageItemControlsCompleted(Me, New UpdateWebPageItemControlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/UpdateWebPageItemData", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateWebPageItemData(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("UpdateWebPageItemData", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateWebPageItemDataAsync(ByVal pXMLParams As String)
            Me.UpdateWebPageItemDataAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateWebPageItemDataAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.UpdateWebPageItemDataOperationCompleted Is Nothing) Then
                Me.UpdateWebPageItemDataOperationCompleted = AddressOf Me.OnUpdateWebPageItemDataOperationCompleted
            End If
            Me.InvokeAsync("UpdateWebPageItemData", New Object() {pXMLParams}, Me.UpdateWebPageItemDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateWebPageItemDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateWebPageItemDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateWebPageItemDataCompleted(Me, New UpdateWebPageItemDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/UpdateWebPageUserControl", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateWebPageUserControl(ByVal pXMLParams As String) As String
            Dim results() As Object = Me.Invoke("UpdateWebPageUserControl", New Object() {pXMLParams})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateWebPageUserControlAsync(ByVal pXMLParams As String)
            Me.UpdateWebPageUserControlAsync(pXMLParams, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateWebPageUserControlAsync(ByVal pXMLParams As String, ByVal userState As Object)
            If (Me.UpdateWebPageUserControlOperationCompleted Is Nothing) Then
                Me.UpdateWebPageUserControlOperationCompleted = AddressOf Me.OnUpdateWebPageUserControlOperationCompleted
            End If
            Me.InvokeAsync("UpdateWebPageUserControl", New Object() {pXMLParams}, Me.UpdateWebPageUserControlOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateWebPageUserControlOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateWebPageUserControlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateWebPageUserControlCompleted(Me, New UpdateWebPageUserControlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://care.co.uk/webservices/")>  _
    Public Enum XMLWebDataSelectionTypes
        
        '''<remarks/>
        wstNone
        
        '''<remarks/>
        wstControl
        
        '''<remarks/>
        wstMenus
        
        '''<remarks/>
        wstMenu
        
        '''<remarks/>
        wstMenuItem
        
        '''<remarks/>
        wstPages
        
        '''<remarks/>
        wstPage
        
        '''<remarks/>
        wstPageItem
        
        '''<remarks/>
        wstPageData
        
        '''<remarks/>
        wstExport
        
        '''<remarks/>
        wstImages
        
        '''<remarks/>
        wstImageItem
        
        '''<remarks/>
        wstDocuments
        
        '''<remarks/>
        wstDocumentItem
        
        '''<remarks/>
        wstPageItemControls
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddWebInfoCompletedEventHandler(ByVal sender As Object, ByVal e As AddWebInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddWebInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddWebMenuCompletedEventHandler(ByVal sender As Object, ByVal e As AddWebMenuCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddWebMenuCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddWebMenuItemCompletedEventHandler(ByVal sender As Object, ByVal e As AddWebMenuItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddWebMenuItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddWebPageCompletedEventHandler(ByVal sender As Object, ByVal e As AddWebPageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddWebPageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddWebPageItemCompletedEventHandler(ByVal sender As Object, ByVal e As AddWebPageItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddWebPageItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub AddWebPageUserControlCompletedEventHandler(ByVal sender As Object, ByVal e As AddWebPageUserControlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddWebPageUserControlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteWebMenuCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteWebMenuCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteWebMenuCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteWebMenuItemCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteWebMenuItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteWebMenuItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteWebPageCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteWebPageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteWebPageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteWebPageItemCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteWebPageItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteWebPageItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ImportWebDataCompletedEventHandler(ByVal sender As Object, ByVal e As ImportWebDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportWebDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SelectWebDataCompletedEventHandler(ByVal sender As Object, ByVal e As SelectWebDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SelectWebDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateWebMenuCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateWebMenuCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateWebMenuCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateWebMenuItemCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateWebMenuItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateWebMenuItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateWebPageCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateWebPageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateWebPageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateWebInfoCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateWebInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateWebInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateWebPageItemCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateWebPageItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateWebPageItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateWebPageItemControlsCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateWebPageItemControlsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateWebPageItemControlsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateWebPageItemDataCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateWebPageItemDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateWebPageItemDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub UpdateWebPageUserControlCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateWebPageUserControlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateWebPageUserControlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
