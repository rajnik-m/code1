'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
'
Namespace CarePortal
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="PortalAdminSoap", [Namespace]:="http://care.co.uk/webservices/")>  _
    Partial Public Class PortalAdmin
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SetWebInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDocumentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetImagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CareWPD.My.MySettings.Default.CareWPD_CarePortal_PortalAdmin
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SetWebInfoCompleted As SetWebInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDocumentsCompleted As GetDocumentsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetImagesCompleted As GetImagesCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteDocumentCompleted As DeleteDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteImageCompleted As DeleteImageCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadDocumentCompleted As UploadDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadImageCompleted As UploadImageCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/SetWebInfo", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetWebInfo(ByVal pWebNumber As Integer, ByVal pWebName As String) As String
            Dim results() As Object = Me.Invoke("SetWebInfo", New Object() {pWebNumber, pWebName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetWebInfoAsync(ByVal pWebNumber As Integer, ByVal pWebName As String)
            Me.SetWebInfoAsync(pWebNumber, pWebName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetWebInfoAsync(ByVal pWebNumber As Integer, ByVal pWebName As String, ByVal userState As Object)
            If (Me.SetWebInfoOperationCompleted Is Nothing) Then
                Me.SetWebInfoOperationCompleted = AddressOf Me.OnSetWebInfoOperationCompleted
            End If
            Me.InvokeAsync("SetWebInfo", New Object() {pWebNumber, pWebName}, Me.SetWebInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetWebInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetWebInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetWebInfoCompleted(Me, New SetWebInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/GetDocuments", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocuments() As String
            Dim results() As Object = Me.Invoke("GetDocuments", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDocumentsAsync()
            Me.GetDocumentsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDocumentsAsync(ByVal userState As Object)
            If (Me.GetDocumentsOperationCompleted Is Nothing) Then
                Me.GetDocumentsOperationCompleted = AddressOf Me.OnGetDocumentsOperationCompleted
            End If
            Me.InvokeAsync("GetDocuments", New Object(-1) {}, Me.GetDocumentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDocumentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDocumentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDocumentsCompleted(Me, New GetDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/GetImages", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImages() As String
            Dim results() As Object = Me.Invoke("GetImages", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetImagesAsync()
            Me.GetImagesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetImagesAsync(ByVal userState As Object)
            If (Me.GetImagesOperationCompleted Is Nothing) Then
                Me.GetImagesOperationCompleted = AddressOf Me.OnGetImagesOperationCompleted
            End If
            Me.InvokeAsync("GetImages", New Object(-1) {}, Me.GetImagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetImagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetImagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetImagesCompleted(Me, New GetImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/DeleteDocument", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteDocument(ByVal pFileName As String) As String
            Dim results() As Object = Me.Invoke("DeleteDocument", New Object() {pFileName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteDocumentAsync(ByVal pFileName As String)
            Me.DeleteDocumentAsync(pFileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteDocumentAsync(ByVal pFileName As String, ByVal userState As Object)
            If (Me.DeleteDocumentOperationCompleted Is Nothing) Then
                Me.DeleteDocumentOperationCompleted = AddressOf Me.OnDeleteDocumentOperationCompleted
            End If
            Me.InvokeAsync("DeleteDocument", New Object() {pFileName}, Me.DeleteDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteDocumentCompleted(Me, New DeleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/DeleteImage", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteImage(ByVal pFileName As String) As String
            Dim results() As Object = Me.Invoke("DeleteImage", New Object() {pFileName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteImageAsync(ByVal pFileName As String)
            Me.DeleteImageAsync(pFileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteImageAsync(ByVal pFileName As String, ByVal userState As Object)
            If (Me.DeleteImageOperationCompleted Is Nothing) Then
                Me.DeleteImageOperationCompleted = AddressOf Me.OnDeleteImageOperationCompleted
            End If
            Me.InvokeAsync("DeleteImage", New Object() {pFileName}, Me.DeleteImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteImageCompleted(Me, New DeleteImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/UploadDocument", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadDocument(ByVal pFileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pByte() As Byte) As String
            Dim results() As Object = Me.Invoke("UploadDocument", New Object() {pFileName, pByte})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadDocumentAsync(ByVal pFileName As String, ByVal pByte() As Byte)
            Me.UploadDocumentAsync(pFileName, pByte, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadDocumentAsync(ByVal pFileName As String, ByVal pByte() As Byte, ByVal userState As Object)
            If (Me.UploadDocumentOperationCompleted Is Nothing) Then
                Me.UploadDocumentOperationCompleted = AddressOf Me.OnUploadDocumentOperationCompleted
            End If
            Me.InvokeAsync("UploadDocument", New Object() {pFileName, pByte}, Me.UploadDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadDocumentCompleted(Me, New UploadDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://care.co.uk/webservices/UploadImage", RequestNamespace:="http://care.co.uk/webservices/", ResponseNamespace:="http://care.co.uk/webservices/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadImage(ByVal pFileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pByte() As Byte) As String
            Dim results() As Object = Me.Invoke("UploadImage", New Object() {pFileName, pByte})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadImageAsync(ByVal pFileName As String, ByVal pByte() As Byte)
            Me.UploadImageAsync(pFileName, pByte, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadImageAsync(ByVal pFileName As String, ByVal pByte() As Byte, ByVal userState As Object)
            If (Me.UploadImageOperationCompleted Is Nothing) Then
                Me.UploadImageOperationCompleted = AddressOf Me.OnUploadImageOperationCompleted
            End If
            Me.InvokeAsync("UploadImage", New Object() {pFileName, pByte}, Me.UploadImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadImageCompleted(Me, New UploadImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub SetWebInfoCompletedEventHandler(ByVal sender As Object, ByVal e As SetWebInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetWebInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetDocumentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetDocumentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDocumentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetImagesCompletedEventHandler(ByVal sender As Object, ByVal e As GetImagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetImagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub DeleteDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub DeleteImageCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub UploadDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As UploadDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub UploadImageCompletedEventHandler(ByVal sender As Object, ByVal e As UploadImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
