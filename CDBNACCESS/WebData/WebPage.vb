Namespace Access

  Public Class WebPage
    Inherits CARERecord

#Region "AutoGenerated Code"

    '--------------------------------------------------
    'Enum defining all the fields in the table
    '--------------------------------------------------
    Private Enum WebPageFields
      AllFields = 0
      WebPageNumber
      WebPageName
      WebPageTitle
      WebMenuNumber
      SuppressSiteHeader
      SuppressSiteFooter
      SuppressSiteLeftPanel
      SuppressSiteRightPanel
      LoginTypeRequired
      PageReviewed
      PagePublished
      FriendlyUrl
      AccessViewName
      AmendedBy
      AmendedOn
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("web_page_number", CDBField.FieldTypes.cftLong)
        .Add("web_page_name")
        .Add("web_page_title")
        .Add("web_menu_number", CDBField.FieldTypes.cftLong)
        .Add("suppress_site_header")
        .Add("suppress_site_footer")
        .Add("suppress_site_left_panel")
        .Add("suppress_site_right_panel")
        .Add("login_type_required")
        .Add("page_reviewed")
        .Add("page_published")
        .Add("friendly_url")
        .Add("access_view_name")

        .Item(WebPageFields.LoginTypeRequired).InDatabase = mvEnv.GetDataStructureInfo(CDBEnvironment.cdbDataStructureConstants.cdbDataWebPageLoginRequired)
        .Item(WebPageFields.SuppressSiteHeader).InDatabase = mvEnv.GetDataStructureInfo(CDBEnvironment.cdbDataStructureConstants.cdbDataWebPageSuppressions)
        .Item(WebPageFields.SuppressSiteFooter).InDatabase = mvEnv.GetDataStructureInfo(CDBEnvironment.cdbDataStructureConstants.cdbDataWebPageSuppressions)
        .Item(WebPageFields.PageReviewed).InDatabase = mvEnv.GetDataStructureInfo(CDBEnvironment.cdbDataStructureConstants.cdbDataWebPagePublished)
        .Item(WebPageFields.PagePublished).InDatabase = mvEnv.GetDataStructureInfo(CDBEnvironment.cdbDataStructureConstants.cdbDataWebPagePublished)
        .Item(WebPageFields.FriendlyUrl).InDatabase = mvEnv.GetDataStructureInfo(CDBEnvironment.cdbDataStructureConstants.cdbDataWebFriendlyUrl)
        .Item(WebPageFields.SuppressSiteLeftPanel).InDatabase = mvEnv.GetDataStructureInfo(CDBEnvironment.cdbDataStructureConstants.cdbDataControlReadonlyAndPanels)
        .Item(WebPageFields.SuppressSiteRightPanel).InDatabase = mvEnv.GetDataStructureInfo(CDBEnvironment.cdbDataStructureConstants.cdbDataControlReadonlyAndPanels)
        .Item(WebPageFields.AccessViewName).InDatabase = mvEnv.GetDataStructureInfo(CDBEnvironment.cdbDataStructureConstants.cdbAccessViewName)

        .Item(WebPageFields.WebPageNumber).PrimaryKey = True
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "wp"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "web_pages"
      End Get
    End Property

    '--------------------------------------------------
    'Default constructor
    '--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

    '--------------------------------------------------
    'Public property procedures
    '--------------------------------------------------
    Public ReadOnly Property WebPageNumber() As Integer
      Get
        Return mvClassFields(WebPageFields.WebPageNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property WebPageName() As String
      Get
        Return mvClassFields(WebPageFields.WebPageName).Value
      End Get
    End Property
    Public ReadOnly Property WebPageTitle() As String
      Get
        Return mvClassFields(WebPageFields.WebPageTitle).Value
      End Get
    End Property
    Public ReadOnly Property WebMenuNumber() As Integer
      Get
        Return mvClassFields(WebPageFields.WebMenuNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property SuppressSiteHeader() As Boolean
      Get
        Return mvClassFields(WebPageFields.SuppressSiteHeader).Bool
      End Get
    End Property
    Public ReadOnly Property SuppressSiteFooter() As Boolean
      Get
        Return mvClassFields(WebPageFields.SuppressSiteFooter).Bool
      End Get
    End Property
    Public ReadOnly Property SuppressSiteLeftPanel() As Boolean
      Get
        Return mvClassFields(WebPageFields.SuppressSiteLeftPanel).Bool
      End Get
    End Property
    Public ReadOnly Property SuppressSiteRightPanel() As Boolean
      Get
        Return mvClassFields(WebPageFields.SuppressSiteRightPanel).Bool
      End Get
    End Property
    Public ReadOnly Property LoginTypeRequired() As String
      Get
        Return mvClassFields(WebPageFields.LoginTypeRequired).Value
      End Get
    End Property
    Public ReadOnly Property PageReviewed() As Boolean
      Get
        Return mvClassFields(WebPageFields.PageReviewed).Bool
      End Get
    End Property
    Public ReadOnly Property PagePublished() As Boolean
      Get
        Return mvClassFields(WebPageFields.PagePublished).Bool
      End Get
    End Property
    Public ReadOnly Property FriendlyUrl() As String
      Get
        Return mvClassFields(WebPageFields.FriendlyUrl).Value
      End Get
    End Property
    Public ReadOnly Property AccessViewName() As String
      Get
        Return mvClassFields(WebPageFields.AccessViewName).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(WebPageFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(WebPageFields.AmendedOn).Value
      End Get
    End Property
#End Region

#Region "Non-AutoGenerated Code"

    Private mvItems As List(Of WebPageItem)

    Protected Overrides Sub SetDefaults()
      MyBase.SetDefaults()
      mvClassFields(WebPageFields.SuppressSiteFooter).Value = "N"
      mvClassFields(WebPageFields.SuppressSiteHeader).Value = "N"
      mvClassFields(WebPageFields.PageReviewed).Value = "N"
      mvClassFields(WebPageFields.PagePublished).Value = "N"
      mvClassFields(WebPageFields.LoginTypeRequired).Value = "N"
      mvClassFields(WebPageFields.SuppressSiteLeftPanel).Value = "N"
      mvClassFields(WebPageFields.SuppressSiteRightPanel).Value = "N"
    End Sub

    Public Overloads Sub Clone(ByVal pWC As WebControl, ByVal pWP As WebPage)
      MyBase.Clone(pWP, pWC.AllocateNextNumber(WebControl.WebNumberFields.wnfPageNumber))
      mvClassFields(WebPageFields.WebPageName).Value = Left$("Copy of " & pWP.WebPageName, 30)
    End Sub

    Public Sub SetWebPageName(ByVal pName As String)
      mvClassFields(WebPageFields.WebPageName).Value = pName
    End Sub

    Public Overrides Sub Delete(ByVal pAmendedBy As String, ByVal pAudit As Boolean, ByVal pJournalNumber As Integer)
      'Need to find all the web_page_items and web_page_item_data that are not linked
      'to any other web page but this one
      Dim vWhereFields As New CDBFields
      vWhereFields.Add("web_page_number", WebPageNumber, CDBField.FieldWhereOperators.fwoNotEqual)
      vWhereFields.Add("web_page_item_number", CDBField.FieldTypes.cftInteger)
      Dim vDelFields As New CDBFields(New CDBField("web_page_item_number", CDBField.FieldTypes.cftInteger))
      Dim vItemList As New List(Of Integer)
      Dim vRecordSet As CDBRecordSet = New SQLStatement(mvEnv.Connection, "web_page_item_number", "web_page_item_links", New CDBField("web_page_number", WebPageNumber)).GetRecordSet
      While vRecordSet.Fetch
        vItemList.Add(vRecordSet.Fields(1).IntegerValue)
      End While
      vRecordSet.CloseRecordSet()
      For Each vItem As Integer In vItemList
        vWhereFields(2).Value = vItem.ToString
        If mvEnv.Connection.GetCount("web_page_item_links", vWhereFields) = 0 Then
          vDelFields(1).Value = vItem.ToString
          mvEnv.Connection.DeleteRecords("web_page_data", vDelFields, False)
          mvEnv.Connection.DeleteRecords("web_page_items", vDelFields, False)
        End If
      Next
      vWhereFields.Clear()
      vWhereFields.Add("web_page_number", WebPageNumber)
      mvEnv.Connection.StartTransaction()
      mvEnv.Connection.DeleteRecords("web_page_item_links", vWhereFields, False)
      MyBase.Delete(pAmendedBy, pAudit, pJournalNumber)
      mvEnv.Connection.CommitTransaction()
    End Sub

    Public ReadOnly Property Items() As List(Of WebPageItem)
      Get
        If mvItems Is Nothing Then
          mvItems = New List(Of WebPageItem)
          Dim vItem As New WebPageItem(mvEnv)
          Dim vWhereFields As New CDBFields
          vWhereFields.Add("wpil.web_page_number", WebPageNumber)
          vWhereFields.AddJoin("wpil.web_page_item_number", "wpi.web_page_item_number")
          Dim vRecordSet As CDBRecordSet = New SQLStatement(mvEnv.Connection, vItem.GetRecordSetFields(), "web_page_item_links wpil, web_page_items wpi", vWhereFields).GetRecordSet
          While vRecordSet.Fetch
            vItem.InitFromRecordSet(vRecordSet)
            mvItems.Add(vItem)
            vItem = New WebPageItem(mvEnv)
          End While
          vRecordSet.CloseRecordSet()
        End If
        Return mvItems
      End Get
    End Property

    Public Function GetNextItemNumber() As Integer
      Dim vWC As New WebControl(mvEnv)
      vWC.Init(WebPageNumber \ WebControl.ItemsMultiplier)
      If vWC.Existing = False Then RaiseError(DataAccessErrors.daeInvalidCode, "WebNumber")
      Return vWC.AllocateNextNumber(WebControl.WebNumberFields.wnfItemNumber)
    End Function

    Public Function GetNextItemLinkNumber() As Integer
      Dim vWC As New WebControl(mvEnv)
      vWC.Init(WebPageNumber \ WebControl.ItemsMultiplier)
      If vWC.Existing = False Then RaiseError(DataAccessErrors.daeInvalidCode, "WebNumber")
      Return vWC.AllocateNextNumber(WebControl.WebNumberFields.wnfItemLinkNumber)
    End Function

    Public Sub SetFriendlyUrl(ByVal pFriendlyUrl As String)
      mvClassFields(WebPageFields.FriendlyUrl).Value = pFriendlyUrl
    End Sub
#End Region

  End Class
End Namespace
 
