Namespace Access

  Public Class SurveyVersion
    Inherits CARERecord
    Implements IRecordCreate

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum SurveyVersionFields
      AllFields = 0
      ClosingDate
      CreatedBy
      CreatedOn
      Source
      SurveyNumber
      SurveyVersion
      SurveyVersionNumber
      ValidFrom
      ValidTo
      WebPublish
      WebViewResults
      AmendedBy
      AmendedOn
    End Enum

'--------------------------------------------------
'Required overrides for the class
'--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("closing_date", CDBField.FieldTypes.cftDate)
        .Add("created_by")
        .Add("created_on", CDBField.FieldTypes.cftDate)
        .Add("source")
        .Add("survey_number", CDBField.FieldTypes.cftLong)
        .Add("survey_version")
        .Add("survey_version_number", CDBField.FieldTypes.cftLong)
        .Add("valid_from", CDBField.FieldTypes.cftDate)
        .Add("valid_to", CDBField.FieldTypes.cftDate)
        .Add("web_publish")
        .Add("web_view_results")

        .Item(SurveyVersionFields.SurveyVersionNumber).PrimaryKey = True
        .SetControlNumberField(SurveyVersionFields.SurveyVersionNumber, "SV")
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "sv"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "survey_versions"
      End Get
    End Property


'--------------------------------------------------
'Default constructor
'--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

'--------------------------------------------------
'Public property procedures
'--------------------------------------------------
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(SurveyVersionFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(SurveyVersionFields.AmendedOn).Value
      End Get
    End Property
    Public ReadOnly Property ClosingDate() As String
      Get
        Return mvClassFields(SurveyVersionFields.ClosingDate).Value
      End Get
    End Property
    Public ReadOnly Property CreatedBy() As String
      Get
        Return mvClassFields(SurveyVersionFields.CreatedBy).Value
      End Get
    End Property
    Public ReadOnly Property CreatedOn() As String
      Get
        Return mvClassFields(SurveyVersionFields.CreatedOn).Value
      End Get
    End Property
    Public ReadOnly Property Source() As String
      Get
        Return mvClassFields(SurveyVersionFields.Source).Value
      End Get
    End Property
    Public ReadOnly Property SurveyNumber() As Integer
      Get
        Return mvClassFields(SurveyVersionFields.SurveyNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property SurveyVersionCode() As String
      Get
        Return mvClassFields(SurveyVersionFields.SurveyVersion).Value
      End Get
    End Property
    Public ReadOnly Property SurveyVersionNumber() As Integer
      Get
        Return mvClassFields(SurveyVersionFields.SurveyVersionNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property ValidFrom() As String
      Get
        Return mvClassFields(SurveyVersionFields.ValidFrom).Value
      End Get
    End Property
    Public ReadOnly Property ValidTo() As String
      Get
        Return mvClassFields(SurveyVersionFields.ValidTo).Value
      End Get
    End Property
    Public ReadOnly Property WebPublish() As String
      Get
        Return mvClassFields(SurveyVersionFields.WebPublish).Value
      End Get
    End Property
    Public ReadOnly Property WebViewResults() As String
      Get
        Return mvClassFields(SurveyVersionFields.WebViewResults).Value
      End Get
    End Property
#End Region

    Public Function CreateInstance(ByVal pEnv As CDBEnvironment) As CARERecord Implements IRecordCreate.CreateInstance
      Return New SurveyVersion(pEnv)
    End Function

    Public Shared Function CreateInstance(ByVal pEnv As CDBEnvironment, ByVal pParameterList As CDBParameters) As SurveyVersion
      Dim vSurveyVersion As New SurveyVersion(pEnv)
      vSurveyVersion.Init(pParameterList)
      Return vSurveyVersion
    End Function

    Public Sub ValidateParameters(ByVal pParameterList As CDBParameters)
      ValidateSurveyVersionNumberParameter(pParameterList)
    End Sub
    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pParameterList"></param>
    ''' <remarks></remarks>
    Public Sub ValidateSurveyVersionNumberParameter(ByVal pParameterList As CDBParameters)
      If pParameterList.Exists("SurveyVersionNumber") Then
        Dim vInteger As Integer
        If pParameterList("SurveyVersionNumber").Value.Length = 0 Or (pParameterList("SurveyVersionNumber").Value.Length > 0 AndAlso Not Integer.TryParse(pParameterList("SurveyVersionNumber").Value, vInteger)) Then
          RaiseError(DataAccessErrors.daeSurveyVersionNumberInvalid)
        End If
      End If
    End Sub

    Public Sub ValidateCreateSurveyNumberParameter(ByVal pParameterList As CDBParameters)
      Dim vSurvey As Survey = Survey.CreateInstance(mvEnv, pParameterList)
      If Not vSurvey.Existing Then
        RaiseError(DataAccessErrors.daeSurveyNumberInvalid)
      End If
    End Sub

    Public Sub ValidateUpdateSurveyNumberParameter(ByVal pParameterList As CDBParameters)
      Dim vSurvey As Survey = Survey.CreateInstance(mvEnv, pParameterList)
      If Not vSurvey.Existing Then
        RaiseError(DataAccessErrors.daeSurveyNumberInvalid)
      End If
      If vSurvey.SurveyNumber <> Me.SurveyNumber Then
        RaiseError(DataAccessErrors.daeSurveyNumberInvalid)
      End If
    End Sub
    Protected Overrides Sub PreValidateCreateParameters(ByVal pParameterList As CDBParameters)
      'Add code here to validate parameters passed to the create methods
      ValidateParameters(pParameterList)
      ValidateCreateSurveyNumberParameter(pParameterList)
    End Sub

    Protected Overrides Sub PreValidateUpdateParameters(ByVal pParameterList As CDBParameters)
      'Add code here to validate parameters passed to the update methods
      ValidateParameters(pParameterList)
    End Sub

    Protected Overrides Sub PostValidateCreateParameters(ByVal pParameterList As CDBParameters)
      'Add code here to validate parameters passed to the create methods
      MyBase.PostValidateUpdateParameters(pParameterList)
    End Sub

    Protected Overrides Sub PostValidateUpdateParameters(ByVal pParameterList As CDBParameters)
      'Add code here to validate parameters passed to the update methods
      MyBase.PostValidateUpdateParameters(pParameterList)
      ValidateUpdateSurveyNumberParameter(pParameterList)
    End Sub
  End Class
End Namespace
