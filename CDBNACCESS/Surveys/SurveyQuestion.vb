Namespace Access

  Public Class SurveyQuestion
    Inherits CARERecord
    Implements IRecordCreate

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum SurveyQuestionFields
      AllFields = 0
      AnswerType
      CreatedBy
      CreatedOn
      HelpText
      Mandatory
      NewPage
      QuestionSequence
      QuestionText
      SurveyNumber
      SurveyQuestionNumber
      AmendedBy
      AmendedOn
    End Enum

'--------------------------------------------------
'Required overrides for the class
'--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("answer_type")
        .Add("created_by")
        .Add("created_on", CDBField.FieldTypes.cftDate)
        .Add("help_text", CDBField.FieldTypes.cftMemo)
        .Add("mandatory")
        .Add("new_page")
        .Add("question_sequence", CDBField.FieldTypes.cftLong)
        .Add("question_text", CDBField.FieldTypes.cftMemo)
        .Add("survey_number", CDBField.FieldTypes.cftLong)
        .Add("survey_question_number", CDBField.FieldTypes.cftLong)

        .Item(SurveyQuestionFields.SurveyQuestionNumber).PrimaryKey = True
        .SetControlNumberField(SurveyQuestionFields.SurveyQuestionNumber, "SQ")
      End With
      mvSurveyAnswersList = Nothing
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "sq"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "survey_questions"
      End Get
    End Property

'--------------------------------------------------
'Default constructor
'--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

'--------------------------------------------------
'Public property procedures
'--------------------------------------------------
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(SurveyQuestionFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(SurveyQuestionFields.AmendedOn).Value
      End Get
    End Property
    Public ReadOnly Property AnswerType() As String
      Get
        Return mvClassFields(SurveyQuestionFields.AnswerType).Value
      End Get
    End Property
    Public ReadOnly Property CreatedBy() As String
      Get
        Return mvClassFields(SurveyQuestionFields.CreatedBy).Value
      End Get
    End Property
    Public ReadOnly Property CreatedOn() As String
      Get
        Return mvClassFields(SurveyQuestionFields.CreatedOn).Value
      End Get
    End Property
    Public ReadOnly Property HelpText() As String
      Get
        Return mvClassFields(SurveyQuestionFields.HelpText).Value
      End Get
    End Property
    Public ReadOnly Property Mandatory() As String
      Get
        Return mvClassFields(SurveyQuestionFields.Mandatory).Value
      End Get
    End Property
    Public ReadOnly Property NewPage() As String
      Get
        Return mvClassFields(SurveyQuestionFields.NewPage).Value
      End Get
    End Property
    Public ReadOnly Property QuestionSequence() As Integer
      Get
        Return mvClassFields(SurveyQuestionFields.QuestionSequence).IntegerValue
      End Get
    End Property
    Public ReadOnly Property QuestionText() As String
      Get
        Return mvClassFields(SurveyQuestionFields.QuestionText).Value
      End Get
    End Property
    Public ReadOnly Property SurveyNumber() As Integer
      Get
        Return mvClassFields(SurveyQuestionFields.SurveyNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property SurveyQuestionNumber() As Integer
      Get
        Return mvClassFields(SurveyQuestionFields.SurveyQuestionNumber).IntegerValue
      End Get
    End Property
#End Region

    Public Function CreateInstance(ByVal pEnv As CDBEnvironment) As CARERecord Implements IRecordCreate.CreateInstance
      Return New SurveyQuestion(pEnv)
    End Function

    Public Shared Function CreateInstance(ByVal pEnv As CDBEnvironment, ByVal pParameterList As CDBParameters) As SurveyQuestion
      Dim vSurveyQuestion As New SurveyQuestion(pEnv)
      vSurveyQuestion.ValidateParameters(pParameterList)
      vSurveyQuestion.Init(pParameterList)
      Return vSurveyQuestion
    End Function

    Public Sub ValidateParameters(ByVal pParameterList As CDBParameters)
      ValidateSurveyQuestionNumberParameter(pParameterList)
    End Sub
    ''' <summary>
    ''' 
    ''' </summary>
    ''' <param name="pParameterList"></param>
    ''' <remarks></remarks>
    Public Sub ValidateSurveyQuestionNumberParameter(ByVal pParameterList As CDBParameters)
      If pParameterList.Exists("SurveyQuestionNumber") Then
        Dim vInteger As Integer
        If pParameterList("SurveyQuestionNumber").Value.Length = 0 Or (pParameterList("SurveyQuestionNumber").Value.Length > 0 AndAlso Not Integer.TryParse(pParameterList("SurveyQuestionNumber").Value, vInteger)) Then
          RaiseError(DataAccessErrors.daeSurveyQuestionNumberInvalid)
        End If
      End If
    End Sub
    ''' <summary>
    ''' Validate the Survey number
    ''' </summary>
    ''' <param name="pParameterList"></param>
    ''' <remarks>If this Survey Question is to be linked to a Survey there should have enough information  in the parameters to Init a Survey</remarks>
    Public Sub ValidateSurveyNumberParameter(ByVal pParameterList As CDBParameters)
      Dim vSurvey As Survey = Survey.CreateInstance(mvEnv, pParameterList)
      If Not vSurvey.Existing Then
        RaiseError(DataAccessErrors.daeSurveyNumberInvalid)
      End If
    End Sub

    Protected Overrides Sub PreValidateCreateParameters(ByVal pParameterList As CDBParameters)
      'Add code here to validate parameters passed to the create methods
      ValidateParameters(pParameterList)
    End Sub

    Protected Overrides Sub PreValidateUpdateParameters(ByVal pParameterList As CDBParameters)
      'Add code here to validate parameters passed to the update methods
      ValidateParameters(pParameterList)
    End Sub

    Protected Overrides Sub PostValidateCreateParameters(ByVal pParameterList As CDBParameters)
      'Add code here to validate parameters passed to the create methods
      MyBase.PostValidateUpdateParameters(pParameterList)
    End Sub

    Protected Overrides Sub PostValidateUpdateParameters(ByVal pParameterList As CDBParameters)
      'Add code here to validate parameters passed to the update methods
      MyBase.PostValidateUpdateParameters(pParameterList)
    End Sub

    Private mvSurveyAnswersList As List(Of SurveyAnswer)
    Friend Function GetSurveyAnswers() As List(Of SurveyAnswer)
      If mvSurveyAnswersList Is Nothing Then
        mvSurveyAnswersList = New List(Of SurveyAnswer)
        If Existing Then
          Dim vWhereFields As New CDBFields(New CDBField("survey_question_number", SurveyQuestionNumber))
          Dim vSurveyAnswer As New SurveyAnswer(mvEnv)
          mvSurveyAnswersList = vSurveyAnswer.GetList(Of SurveyAnswer)(vSurveyAnswer, vWhereFields)
        End If
      End If
      Return mvSurveyAnswersList
    End Function
  End Class
End Namespace
