Namespace Access

  Public Class SurveyContactGroup
    Inherits CARERecord
    Implements IRecordCreate

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum SurveyContactGroupFields
      AllFields = 0
      ContactGroup
      CreatedBy
      CreatedOn
      SurveyNumber
      AmendedBy
      AmendedOn
    End Enum

'--------------------------------------------------
'Required overrides for the class
'--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("contact_group")
        .Add("created_by")
        .Add("created_on", CDBField.FieldTypes.cftDate)
        .Add("survey_number", CDBField.FieldTypes.cftLong)

        .Item(SurveyContactGroupFields.SurveyNumber).PrimaryKey = True
        .Item(SurveyContactGroupFields.ContactGroup).PrimaryKey = True
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "scg"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "survey_contact_groups"
      End Get
    End Property

'--------------------------------------------------
'Default constructor
'--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

'--------------------------------------------------
'Public property procedures
'--------------------------------------------------
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(SurveyContactGroupFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(SurveyContactGroupFields.AmendedOn).Value
      End Get
    End Property
    Public ReadOnly Property ContactGroup() As String
      Get
        Return mvClassFields(SurveyContactGroupFields.ContactGroup).Value
      End Get
    End Property
    Public ReadOnly Property CreatedBy() As String
      Get
        Return mvClassFields(SurveyContactGroupFields.CreatedBy).Value
      End Get
    End Property
    Public ReadOnly Property CreatedOn() As String
      Get
        Return mvClassFields(SurveyContactGroupFields.CreatedOn).Value
      End Get
    End Property
    Public ReadOnly Property SurveyNumber() As Integer
      Get
        Return mvClassFields(SurveyContactGroupFields.SurveyNumber).IntegerValue
      End Get
    End Property
#End Region

    Public Overrides Function GetAddRecordMandatoryParameters() As String
      Return "SurveyNumber,ContactGroup"
    End Function

    Public Function CreateInstance(ByVal pEnv As CDBEnvironment) As CARERecord Implements IRecordCreate.CreateInstance
      Return New SurveyContactGroup(pEnv)
    End Function

    Public Shared Function CreateInstance(ByVal pEnv As CDBEnvironment, ByVal pParameterList As CDBParameters) As SurveyContactGroup
      Dim vSurveyContactGroup As New SurveyContactGroup(pEnv)
      vSurveyContactGroup.ValidateParameters(pParameterList)
      vSurveyContactGroup.Init(pParameterList)
      Return vSurveyContactGroup
    End Function

    Public Sub ValidateParameters(ByVal pParameterList As CDBParameters)
      ValidateSurveyNumberParameter(pParameterList)
    End Sub

    Public Sub ValidateSurveyNumberParameter(ByVal pParameterList As CDBParameters)
      Dim vSurvey As Survey = Survey.CreateInstance(mvEnv, pParameterList)
      If Not vSurvey.Existing Then
        RaiseError(DataAccessErrors.daeSurveyNumberInvalid)
      End If
    End Sub

    Public Sub ValidateContactGroupParameter(ByVal pParameterList As CDBParameters)
      Dim vContactGroup As New ContactGroup(mvEnv)
      vContactGroup.Init(pParameterList)
      If Not vContactGroup.Existing Then
        RaiseError(DataAccessErrors.daeInvalidContactGroup)
      End If
    End Sub
  End Class
End Namespace
