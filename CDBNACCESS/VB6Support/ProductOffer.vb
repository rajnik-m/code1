Namespace Access

  Public Class ProductOffer
    Inherits CARERecord

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum ProductOfferFields
      AllFields = 0
      Product
      Activity
      ActivityValue
      ActivityQuantity
      ProductQuantity
      Rate
      EntitlementProduct
      EntitlementRate
      UseQtyMultiplier
      AmendedBy
      AmendedOn
    End Enum

'--------------------------------------------------
'Required overrides for the class
'--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("product")
        .Add("activity")
        .Add("activity_value")
        .Add("activity_quantity", CDBField.FieldTypes.cftNumeric)
        .Add("product_quantity", CDBField.FieldTypes.cftInteger)
        .Add("rate")
        .Add("entitlement_product")
        .Add("entitlement_rate")
        .Add("use_qty_multiplier")

        .Item(ProductOfferFields.Product).PrimaryKey = True
        .Item(ProductOfferFields.Rate).PrimaryKey = True
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "po"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "product_offers"
      End Get
    End Property

'--------------------------------------------------
'Default constructor
'--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

    Public Overloads Sub Init(Optional ByVal pProduct As String = "", Optional ByVal pRate As String = "")
      Dim vRecordSet As CDBRecordSet

      If pProduct.Length > 0 Then
        vRecordSet = mvEnv.Connection.GetRecordSet("SELECT " & GetRecordSetFields() & " FROM product_offers po WHERE product = '" & pProduct & "' AND rate = '" & pRate & "'")
        If vRecordSet.Fetch() Then
          InitFromRecordSet(vRecordSet)
        Else
          InitClassFields()
          SetDefaults()
        End If
        vRecordSet.CloseRecordSet()
      Else
        InitClassFields()
        SetDefaults()
      End If
    End Sub

'--------------------------------------------------
'Public property procedures
    '--------------------------------------------------
    Public ReadOnly Property ProductCode() As String
      Get
        Return mvClassFields(ProductOfferFields.Product).Value
      End Get
    End Property
    Public ReadOnly Property Activity() As String
      Get
        Return mvClassFields(ProductOfferFields.Activity).Value
      End Get
    End Property
    Public ReadOnly Property ActivityValue() As String
      Get
        Return mvClassFields(ProductOfferFields.ActivityValue).Value
      End Get
    End Property
    Public ReadOnly Property ActivityQuantity() As Double
      Get
        Return mvClassFields(ProductOfferFields.ActivityQuantity).DoubleValue
      End Get
    End Property
    Public ReadOnly Property ProductQuantity() As Integer
      Get
        Return mvClassFields(ProductOfferFields.ProductQuantity).IntegerValue
      End Get
    End Property
    Public ReadOnly Property RateCode() As String
      Get
        Return mvClassFields(ProductOfferFields.Rate).Value
      End Get
    End Property
    Public ReadOnly Property EntitlementProduct() As String
      Get
        Return mvClassFields(ProductOfferFields.EntitlementProduct).Value
      End Get
    End Property
    Public ReadOnly Property EntitlementRate() As String
      Get
        Return mvClassFields(ProductOfferFields.EntitlementRate).Value
      End Get
    End Property
    Public ReadOnly Property UseQtyMultiplier() As String
      Get
        Return mvClassFields(ProductOfferFields.UseQtyMultiplier).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(ProductOfferFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(ProductOfferFields.AmendedOn).Value
      End Get
    End Property
#End Region

  End Class
End Namespace
