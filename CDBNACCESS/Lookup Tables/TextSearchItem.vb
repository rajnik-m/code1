Namespace Access

  Public Class TextSearchItem
    Inherits CARERecord

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum TextSearchItemFields
      AllFields = 0
      TableName
      KeyAttributeName
      UniqueAttributeName
      DescriptionAttributeName
      LinkTableName
      LinkAttributeName
      ItemType
      ItemSource
      TextItemNames
      AmendedBy
      AmendedOn
    End Enum

'--------------------------------------------------
'Required overrides for the class
'--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("table_name")
        .Add("key_attribute_name")
        .Add("unique_attribute_name")
        .Add("description_attribute_name")
        .Add("link_table_name")
        .Add("link_attribute_name")
        .Add("item_type")
        .Add("item_source")
        .Add("text_item_names")
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "tsi"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "text_search_items"
      End Get
    End Property

'--------------------------------------------------
'Default constructor
'--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

'--------------------------------------------------
'Public property procedures
'--------------------------------------------------
    Public ReadOnly Property TableName() As String
      Get
        Return mvClassFields(TextSearchItemFields.TableName).Value
      End Get
    End Property
    Public ReadOnly Property KeyAttributeName() As String
      Get
        Return mvClassFields(TextSearchItemFields.KeyAttributeName).Value
      End Get
    End Property
    Public ReadOnly Property UniqueAttributeName() As String
      Get
        Return mvClassFields(TextSearchItemFields.UniqueAttributeName).Value
      End Get
    End Property
    Public ReadOnly Property DescriptionAttributeName() As String
      Get
        Return mvClassFields(TextSearchItemFields.DescriptionAttributeName).Value
      End Get
    End Property
    Public ReadOnly Property LinkTableName() As String
      Get
        Return mvClassFields(TextSearchItemFields.LinkTableName).Value
      End Get
    End Property
    Public ReadOnly Property LinkAttributeName() As String
      Get
        Return mvClassFields(TextSearchItemFields.LinkAttributeName).Value
      End Get
    End Property
    Public ReadOnly Property ItemType() As String
      Get
        Return mvClassFields(TextSearchItemFields.ItemType).Value
      End Get
    End Property
    Public ReadOnly Property ItemSource() As String
      Get
        Return mvClassFields(TextSearchItemFields.ItemSource).Value
      End Get
    End Property
    Public ReadOnly Property TextItemNames() As String
      Get
        Return mvClassFields(TextSearchItemFields.TextItemNames).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(TextSearchItemFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(TextSearchItemFields.AmendedOn).Value
      End Get
    End Property
#End Region

#Region "Non-Autogenerated Code"

    Public ReadOnly Property TextAttrsAsField() As String
      Get
        Dim vFieldText As New StringBuilder
        Dim vAttrs() As String = TextItemNames.Split(","c)
        For vIndex As Integer = 0 To vAttrs.Length - 1
          Dim vField As String = vAttrs(vIndex)
          With vFieldText
            If vField = "notes" OrElse vField = "status_reason" OrElse vField = "long_description" Or vField = "precis" Or vField = "house_name" Then
              .Append("isnull(")
              .Append("convert(varchar(80), t1.")
              .Append(vField)
              If vIndex < vAttrs.Length - 1 Then
                .Append(") + ', ', '') + ")
              Else
                .Append("), '')")
              End If
            Else
              If vField.EndsWith("number") Then
                .Append("convert(char(9), t1.")
                .Append(vField)
                .Append(")")
                If vIndex < vAttrs.Length - 1 Then .Append(" + ', ' + ")
              Else
                .Append("isnull( t1.")
                .Append(vField)
                If vIndex < vAttrs.Length - 1 Then
                  .Append(" + ', ', '') + ")
                Else
                  .Append(", '')")
                End If
              End If
            End If
          End With
        Next
        Return vFieldText.ToString
      End Get
    End Property

#End Region

  End Class
End Namespace
