Imports System.Linq
Namespace Access

  Public Class MaintenanceRelation
    Inherits CARERecord

#Region "AutoGenerated Code"

    '--------------------------------------------------
    'Enum defining all the fields in the table
    '--------------------------------------------------
    Protected Friend Enum MaintenanceRelationFields
      AllFields = 0
      PrimaryTableName
      PrimaryAttributeName
      RelatedTableName
      RelatedAttributeName
      RelatedTableDesc
      RelatedAttributeDesc
      PrimaryCreateAction
      PrimaryDeleteAction
      SequenceNumber
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("primary_table_name")
        .Add("primary_attribute_name")
        .Add("related_table_name")
        .Add("related_attribute_name")
        .Add("related_table_desc")
        .Add("related_attribute_desc")
        .Add("primary_create_action")
        .Add("primary_delete_action")
        .Add("sequence_number", CDBField.FieldTypes.cftInteger)
        .Item(MaintenanceRelationFields.PrimaryTableName).PrefixRequired = True
        .Item(MaintenanceRelationFields.RelatedTableName).PrefixRequired = True
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return False
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "mr"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "maintenance_relations"
      End Get
    End Property

    '--------------------------------------------------
    'Default constructor
    '--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

    '--------------------------------------------------
    'Public property procedures
    '--------------------------------------------------
    Public Property PrimaryTableName() As String
      Get
        Return mvClassFields(MaintenanceRelationFields.PrimaryTableName).Value
      End Get
      Protected Friend Set(value As String)
        mvClassFields(MaintenanceRelationFields.PrimaryTableName).Value = value
      End Set
    End Property
    Public ReadOnly Property PrimaryAttributeName() As String
      Get
        Return mvClassFields(MaintenanceRelationFields.PrimaryAttributeName).Value
      End Get
    End Property
    Public ReadOnly Property RelatedTableName() As String
      Get
        Return mvClassFields(MaintenanceRelationFields.RelatedTableName).Value
      End Get
    End Property
    Public ReadOnly Property RelatedAttributeName() As String
      Get
        Return mvClassFields(MaintenanceRelationFields.RelatedAttributeName).Value
      End Get
    End Property
    Public ReadOnly Property RelatedTableDesc() As String
      Get
        Return mvClassFields(MaintenanceRelationFields.RelatedTableDesc).Value
      End Get
    End Property
    Public ReadOnly Property RelatedAttributeDesc() As String
      Get
        Return mvClassFields(MaintenanceRelationFields.RelatedAttributeDesc).Value
      End Get
    End Property
    Public ReadOnly Property PrimaryCreateAction() As String
      Get
        Return mvClassFields(MaintenanceRelationFields.PrimaryCreateAction).Value
      End Get
    End Property
    Public ReadOnly Property PrimaryDeleteAction() As String
      Get
        Return mvClassFields(MaintenanceRelationFields.PrimaryDeleteAction).Value
      End Get
    End Property
    Public ReadOnly Property SequenceNumber() As Integer
      Get
        Return mvClassFields(MaintenanceRelationFields.SequenceNumber).IntegerValue
      End Get
    End Property
#End Region


    Public Function GetWhereClause(pValues As ClassFields) As CDBFields
      Dim vWhereFields As New CDBFields
      Dim vPrimaryAttrs As List(Of String)
      Dim vRelatedAttrs As List(Of String)
      Dim vFound As Boolean = False

      vPrimaryAttrs = Me.PrimaryAttributeName.Split(","c).ToList
      vRelatedAttrs = Me.RelatedAttributeName.Split(","c).ToList

      If vRelatedAttrs.Count <> vPrimaryAttrs.Count Then
        RaiseError(DataAccessErrors.daePrimaryAndRelatedAttributesDontMatch)
      End If

      For vIdx As Integer = 0 To vRelatedAttrs.Count - 1
        vWhereFields.Add(vRelatedAttrs(vIdx), pValues(vPrimaryAttrs(vIdx)).Value) 'create a where clause where related attribute = primary value
      Next

      Return vWhereFields
    End Function


    Public Shared Sub ValidateRelations(pValues As ClassFields, pItems As IEnumerable(Of MaintenanceRelation), pRaiseCallback As System.Action(Of MaintenanceRelation))

      Dim vCheckConstraints As IEnumerable(Of MaintenanceRelation) = pItems.Where(Function(pInstance) pInstance.PrimaryDeleteAction = "N")

      vCheckConstraints.ToList.ForEach(Sub(pInstance)
                                         Dim vRelatedWhere As CDBFields = pInstance.GetWhereClause(pValues)
                                         Dim vCount As Integer = pInstance.Environment.Connection.GetCount(pInstance.RelatedTableName, vRelatedWhere)
                                         If vCount > 0 Then
                                           pRaiseCallback(pInstance)
                                         End If
                                       End Sub)
    End Sub
  End Class
End Namespace
