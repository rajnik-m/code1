Namespace Access

  Public Class PrizeDraw
    Inherits CARERecord

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum PrizeDrawFields
      AllFields = 0
      PrizeDraw
      PrizeDrawDesc
      DrawDate
      CloseDate
      Campaign
      Appeal
      Product
      Rate
      BankAccount
      TransactionType
      MaximumPrizes
      AmendedBy
      AmendedOn
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("prize_draw", CDBField.FieldTypes.cftInteger)
        .Add("prize_draw_desc")
        .Add("draw_date", CDBField.FieldTypes.cftDate)
        .Add("close_date", CDBField.FieldTypes.cftDate)
        .Add("campaign")
        .Add("appeal")
        .Add("product")
        .Add("rate")
        .Add("bank_account")
        .Add("transaction_type")
        .Add("maximum_prizes", CDBField.FieldTypes.cftInteger)

        .Item(PrizeDrawFields.PrizeDraw).PrimaryKey = True
        .Item(PrizeDrawFields.PrizeDraw).PrefixRequired = True

        .Item(PrizeDrawFields.Campaign).PrefixRequired = True
        .Item(PrizeDrawFields.Appeal).PrefixRequired = True
        .Item(PrizeDrawFields.Product).PrefixRequired = True
        .Item(PrizeDrawFields.Rate).PrefixRequired = True
        .Item(PrizeDrawFields.BankAccount).PrefixRequired = True
        .Item(PrizeDrawFields.TransactionType).PrefixRequired = True
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "pd"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "prize_draws"
      End Get
    End Property

'--------------------------------------------------
'Default constructor
'--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

'--------------------------------------------------
'Public property procedures
'--------------------------------------------------
    Public ReadOnly Property PrizeDrawCode() As Integer
      Get
        Return mvClassFields(PrizeDrawFields.PrizeDraw).IntegerValue
      End Get
    End Property
    Public ReadOnly Property PrizeDrawDesc() As String
      Get
        Return mvClassFields(PrizeDrawFields.PrizeDrawDesc).Value
      End Get
    End Property
    Public ReadOnly Property DrawDate() As String
      Get
        Return mvClassFields(PrizeDrawFields.DrawDate).Value
      End Get
    End Property
    Public ReadOnly Property CloseDate() As String
      Get
        Return mvClassFields(PrizeDrawFields.CloseDate).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(PrizeDrawFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(PrizeDrawFields.AmendedOn).Value
      End Get
    End Property
    Public ReadOnly Property CampaignCode() As String
      Get
        Return mvClassFields(PrizeDrawFields.Campaign).Value
      End Get
    End Property
    Public ReadOnly Property AppealCode() As String
      Get
        Return mvClassFields(PrizeDrawFields.Appeal).Value
      End Get
    End Property
    Public ReadOnly Property ProductCode() As String
      Get
        Return mvClassFields(PrizeDrawFields.Product).Value
      End Get
    End Property
    Public ReadOnly Property RateCode() As String
      Get
        Return mvClassFields(PrizeDrawFields.Rate).Value
      End Get
    End Property
    Public ReadOnly Property BankAccount() As String
      Get
        Return mvClassFields(PrizeDrawFields.BankAccount).Value
      End Get
    End Property
    Public ReadOnly Property TransactionType() As String
      Get
        Return mvClassFields(PrizeDrawFields.TransactionType).Value
      End Get
    End Property
    Public ReadOnly Property MaximumPrizes() As Integer
      Get
        Return mvClassFields(PrizeDrawFields.MaximumPrizes).IntegerValue
      End Get
    End Property
#End Region


#Region "Non-AutoGenerated Code"

    Public Overrides Sub Delete(pAmendedBy As String, pAudit As Boolean, pJournalNumber As Integer)
      'Add tables to be checked before deletion
      Dim vFieldList As String = "related_table_name, related_attribute_name, related_table_desc"
      Dim vWhereFields As New CDBFields(New CDBField("primary_table_name", DatabaseTableName))
      vWhereFields.Add("primary_delete_action", "N")
      Dim vRecordSet As CDBRecordSet = New SQLStatement(mvEnv.Connection, vFieldList, "maintenance_relations", vWhereFields, "sequence_number").GetRecordSet
      While vRecordSet.Fetch()
        If mvEnv.Connection.TableExists(vRecordSet.Fields("related_table_name").Value) Then
          'Table must exist first (some may not for Prize Draws)
          AddDeleteCheckItem(vRecordSet.Fields("related_table_name").Value, vRecordSet.Fields("related_attribute_name").Value, vRecordSet.Fields("related_table_desc").Value)
        End If
      End While
      vRecordSet.CloseRecordSet()

      MyBase.Delete(pAmendedBy, pAudit, pJournalNumber)
    End Sub

    Public Sub InitFromCampaignAndAppeal(ByVal pCampaignCode As String, ByVal pAppealCode As String)
      Dim vWhereFields As New CDBFields(New CDBField("pd.campaign", pCampaignCode))
      vWhereFields.Add("pd.appeal", pAppealCode)
      vWhereFields.Add("p.history_only", "N")

      Dim vAnsiJoins As New AnsiJoins({New AnsiJoin("products p", "pd.product", "p.product")})
      vAnsiJoins.Add("rates r", "pd.product", "r.product", "pd.rate", "r.rate")

      Dim vSQLStatement As New SQLStatement(mvEnv.Connection, GetRecordSetFields(), DatabaseTableName & " " & TableAlias, vWhereFields, String.Empty, vAnsiJoins)
      Dim vRecordSet As CDBRecordSet = vSQLStatement.GetRecordSet()
      If vRecordSet.Fetch Then
        MyBase.InitFromRecordSet(vRecordSet)
      Else
        SetDefaults()
      End If
      vRecordSet.CloseRecordSet()

    End Sub

    Private mvProduct As Product
    Public ReadOnly Property Product() As Product
      Get
        If mvProduct Is Nothing Then
          mvProduct = New Product(mvEnv)
          mvProduct.Init(ProductCode)
        End If
        Return mvProduct
      End Get
    End Property

    Private mvAppeal As Appeal
    Public ReadOnly Property Appeal() As Appeal
      Get
        If mvAppeal Is Nothing Then
          mvAppeal = New Appeal(mvEnv)
          mvAppeal.Init(CampaignCode, AppealCode, True)  'Initialise Appeal and Segments
        End If
        Return mvAppeal
      End Get
    End Property


#End Region


  End Class
End Namespace
