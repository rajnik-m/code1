Imports Advanced.Data.Merge

Namespace Access

  Public Class ExamGradeChangeHistory
    Inherits CARERecord

    Private mvExamStudentUnitHeader As ExamStudentUnitHeader

#Region "AutoGenerated Code"

    '--------------------------------------------------
    'Enum defining all the fields in the table
    '--------------------------------------------------
    Private Enum ExamGradeChangeHistoryFields
      AllFields = 0
      ExamGradeChangeHistoryId
      ExamBookingUnitId
      ExamBookingId
      ExamUnitId
      ExamStudentUnitHeaderId
      ExamGradeChangeReason
      PreviousMark
      PreviousGrade
      PreviousResult
      PreviousRawMark
      PreviousOriginalMark
      PreviousOriginalGrade
      PreviousOriginalResult
      PreviousModeratedMark
      PreviousModeratedGrade
      PreviousModeratedResult
      AmendedBy
      AmendedOn
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("exam_grade_change_history_id", CDBField.FieldTypes.cftInteger)
        .Add("exam_booking_unit_id", CDBField.FieldTypes.cftInteger)
        .Add("exam_booking_id", CDBField.FieldTypes.cftInteger)
        .Add("exam_unit_id", CDBField.FieldTypes.cftInteger)
        .Add("exam_student_unit_header_id", CDBField.FieldTypes.cftInteger)
        .Add("exam_grade_change_reason")
        .Add("previous_mark", CDBField.FieldTypes.cftNumeric)
        .Add("previous_grade")
        .Add("previous_result")
        .Add("previous_raw_mark", CDBField.FieldTypes.cftNumeric)
        .Add("previous_original_mark", CDBField.FieldTypes.cftNumeric)
        .Add("previous_original_grade")
        .Add("previous_original_result")
        .Add("previous_moderated_mark", CDBField.FieldTypes.cftNumeric)
        .Add("previous_moderated_grade")
        .Add("previous_moderated_result")

        .Item(ExamGradeChangeHistoryFields.ExamGradeChangeHistoryId).PrimaryKey = True
        .Item(ExamGradeChangeHistoryFields.ExamGradeChangeHistoryId).PrefixRequired = True
        .SetControlNumberField(ExamGradeChangeHistoryFields.ExamGradeChangeHistoryId, "XGH")

        .Item(ExamGradeChangeHistoryFields.ExamGradeChangeReason).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.PreviousMark).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.PreviousGrade).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.PreviousResult).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.PreviousRawMark).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.PreviousOriginalMark).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.PreviousOriginalGrade).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.PreviousOriginalResult).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.PreviousModeratedMark).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.PreviousModeratedGrade).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.PreviousModeratedResult).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.ExamUnitId).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.ExamStudentUnitHeaderId).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.ExamBookingUnitId).PrefixRequired = True
        .Item(ExamGradeChangeHistoryFields.ExamBookingId).PrefixRequired = True
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "egch"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "exam_grade_change_history"
      End Get
    End Property

    '--------------------------------------------------
    'Default constructor
    '--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

    '--------------------------------------------------
    'Public property procedures
    '--------------------------------------------------
    Public ReadOnly Property ExamGradeChangeHistoryId() As Integer
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.ExamGradeChangeHistoryId).IntegerValue
      End Get
    End Property
    Public ReadOnly Property ExamBookingUnitId() As Integer
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.ExamBookingUnitId).IntegerValue
      End Get
    End Property
    Public ReadOnly Property ExamBookingId() As Integer
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.ExamBookingId).IntegerValue
      End Get
    End Property
    Public ReadOnly Property ExamUnitId() As Integer
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.ExamUnitId).IntegerValue
      End Get
    End Property
    Public Property ExamStudentUnitHeaderId() As Integer
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.ExamStudentUnitHeaderId).IntegerValue
      End Get
      Private Set(value As Integer)
        mvClassFields(ExamGradeChangeHistoryFields.ExamStudentUnitHeaderId).IntegerValue = value
      End Set
    End Property
    Public ReadOnly Property ExamGradeChangeReason() As String
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.ExamGradeChangeReason).Value
      End Get
    End Property
    Public ReadOnly Property PreviousMark() As Double
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.PreviousMark).DoubleValue
      End Get
    End Property
    Public ReadOnly Property PreviousGrade() As String
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.PreviousGrade).Value
      End Get
    End Property
    Public ReadOnly Property PreviousResult() As String
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.PreviousResult).Value
      End Get
    End Property
    Public ReadOnly Property PreviousRawMark() As Double
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.PreviousRawMark).DoubleValue
      End Get
    End Property
    Public ReadOnly Property PreviousOriginalMark() As Double
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.PreviousOriginalMark).DoubleValue
      End Get
    End Property
    Public ReadOnly Property PreviousOriginalGrade() As String
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.PreviousOriginalGrade).Value
      End Get
    End Property
    Public ReadOnly Property PreviousOriginalResult() As String
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.PreviousOriginalResult).Value
      End Get
    End Property
    Public ReadOnly Property PreviousModeratedMark() As Double
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.PreviousModeratedMark).DoubleValue
      End Get
    End Property
    Public ReadOnly Property PreviousModeratedGrade() As String
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.PreviousModeratedGrade).Value
      End Get
    End Property
    Public ReadOnly Property PreviousModeratedResult() As String
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.PreviousModeratedResult).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(ExamGradeChangeHistoryFields.AmendedOn).Value
      End Get
    End Property
#End Region

#Region "Non AutoGenerated Code"
    <MergeParent>
    Public Property ExamStudentUnitHeader As ExamStudentUnitHeader
      Get
        If mvExamStudentUnitHeader Is Nothing AndAlso Me.ExamStudentUnitHeaderId > 0 Then
          Me.ExamStudentUnitHeader = Me.GetRelatedInstance(Of ExamStudentUnitHeader)({ExamGradeChangeHistoryFields.ExamStudentUnitHeaderId})
        End If
        Return mvExamStudentUnitHeader
      End Get
      Set(value As ExamStudentUnitHeader)
        mvExamStudentUnitHeader = value
        If value IsNot Nothing AndAlso value.ExamStudentHeaderId <> Me.ExamStudentUnitHeaderId Then
          Me.ExamStudentUnitHeaderId = value.ExamStudentUnitHeaderId
        End If

      End Set
    End Property
#End Region

  End Class
End Namespace
