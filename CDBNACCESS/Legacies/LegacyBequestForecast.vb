Namespace Access

  Public Class LegacyBequestForecast
    Inherits CARERecord

#Region "AutoGenerated Code"

    '--------------------------------------------------
    'Enum defining all the fields in the table
    '--------------------------------------------------
    Private Enum LegacyBequestForecastFields
      AllFields = 0
      LegacyNumber
      BequestNumber
      StageMonthsDelay
      StagePercentage
      AmendedBy
      AmendedOn
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("legacy_number", CDBField.FieldTypes.cftLong)
        .Add("bequest_number", CDBField.FieldTypes.cftLong)
        .Add("stage_months_delay", CDBField.FieldTypes.cftInteger)
        .Add("stage_percentage", CDBField.FieldTypes.cftNumeric)

        .Item(LegacyBequestForecastFields.LegacyNumber).PrimaryKey = True

        .Item(LegacyBequestForecastFields.BequestNumber).PrimaryKey = True

        .Item(LegacyBequestForecastFields.StageMonthsDelay).PrimaryKey = True

        .SetUniqueField(LegacyBequestForecastFields.LegacyNumber)
        .SetUniqueField(LegacyBequestForecastFields.BequestNumber)
        .SetUniqueField(LegacyBequestForecastFields.StageMonthsDelay)
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "lbf"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "legacy_bequest_forecasts"
      End Get
    End Property

    '--------------------------------------------------
    'Default constructor
    '--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

    '--------------------------------------------------
    'Public property procedures
    '--------------------------------------------------
    Public ReadOnly Property LegacyNumber() As Integer
      Get
        Return mvClassFields(LegacyBequestForecastFields.LegacyNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property BequestNumber() As Integer
      Get
        Return mvClassFields(LegacyBequestForecastFields.BequestNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property StageMonthsDelay() As Integer
      Get
        Return mvClassFields(LegacyBequestForecastFields.StageMonthsDelay).IntegerValue
      End Get
    End Property
    Public ReadOnly Property StagePercentage() As Double
      Get
        Return mvClassFields(LegacyBequestForecastFields.StagePercentage).DoubleValue
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(LegacyBequestForecastFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(LegacyBequestForecastFields.AmendedOn).Value
      End Get
    End Property
#End Region

#Region "Non-AutoGenerated Code"

    Public Overloads Sub Init(ByVal pLegacyNumber As Integer, ByVal pBequestNumber As Integer, ByVal pStageMonthsDelay As Integer)
      CheckClassFields()
      Dim vWhereFields As New CDBFields()
      vWhereFields.Add(mvClassFields(LegacyBequestForecastFields.LegacyNumber).Name, pLegacyNumber)
      vWhereFields.Add(mvClassFields(LegacyBequestForecastFields.BequestNumber).Name, pBequestNumber)
      vWhereFields.Add(mvClassFields(LegacyBequestForecastFields.StageMonthsDelay).Name, pStageMonthsDelay)
      MyBase.InitWithPrimaryKey(vWhereFields)
    End Sub

    Public Overrides Sub InitForUpdate(ByVal pParams As CDBParameters)
      Init()
      Init(pParams("LegacyNumber").LongValue, pParams("BequestNumber").LongValue, pParams("OldStageMonthsDelay").LongValue)
    End Sub

    Public Overrides Function GetUniqueKeyFieldNames() As String
      Return "LegacyNumber,BequestNumber,StageMonthsDelay"
    End Function

    Public Overrides Function GetUpdateKeyFieldNames() As String
      Return "LegacyNumber,BequestNumber,OldStageMonthsDelay"
    End Function

    Public Overrides Function GetAddRecordMandatoryParameters() As String
      Return "LegacyNumber,BequestNumber,StageMonthsDelay"
    End Function

    Protected Overrides Sub PostValidateCreateParameters(ByVal pParameterList As CDBParameters)
      ValidateProjectedPercentTotal()
    End Sub

    Protected Overrides Sub PostValidateUpdateParameters(ByVal pParameterList As CDBParameters)
      ValidateProjectedPercentTotal()
      If pParameterList.ContainsKey("StageMonthsDelay") Then mvClassFields(LegacyBequestForecastFields.StageMonthsDelay).Value = pParameterList("StageMonthsDelay").Value
      If mvClassFields(LegacyBequestForecastFields.StageMonthsDelay).ValueChanged Then mvClassFields.CheckRecordExists(mvEnv)
    End Sub

    Private Sub ValidateProjectedPercentTotal()
      If mvClassFields(LegacyBequestForecastFields.StagePercentage).ValueChanged Then
        Dim vWhereFields As New CDBFields()
        vWhereFields.Add(mvClassFields(LegacyBequestForecastFields.LegacyNumber).Name, LegacyNumber)
        vWhereFields.Add(mvClassFields(LegacyBequestForecastFields.BequestNumber).Name, BequestNumber)
        Dim vSQLStatement As New SQLStatement(mvEnv.Connection, "SUM(stage_percentage)", DatabaseTableName, vWhereFields, "")
        Dim vTotal As Integer = IntegerValue(vSQLStatement.GetValue)
        vTotal += CInt(StagePercentage - IntegerValue(mvClassFields(LegacyBequestForecastFields.StagePercentage).SetValue))
        If vTotal > 100 Then RaiseError(DataAccessErrors.daeForecastsExceedTotal, vTotal.ToString)
      End If
    End Sub

#End Region

  End Class

End Namespace
