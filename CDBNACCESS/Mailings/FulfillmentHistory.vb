Imports Advanced.LanguageExtensions

Namespace Access

  Public Class FulfillmentHistory
    Inherits CARERecord

#Region "AutoGenerated Code"

    '--------------------------------------------------
    'Enum defining all the fields in the table
    '--------------------------------------------------
    Private Enum FulfillmentHistoryFields
      AllFields = 0
      FulfillmentNumber
      FulfilledBy
      FulfilledOn
      CancelledOn
      CancelledBy
      CancellationReason
      NumberOfDocuments
      FulfilmentFilename
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("fulfillment_number", CDBField.FieldTypes.cftLong)
        .Add("fulfilled_by")
        .Add("fulfilled_on", CDBField.FieldTypes.cftDate)
        .Add("cancelled_on", CDBField.FieldTypes.cftDate)
        .Add("cancelled_by")
        .Add("cancellation_reason")
        .Add("number_of_documents", CDBField.FieldTypes.cftLong)
        .Add("fulfilment_filename")

        .Item(FulfillmentHistoryFields.FulfillmentNumber).PrimaryKey = True
        .SetControlNumberField(FulfillmentHistoryFields.FulfillmentNumber, "FN")
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return False
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "ffh"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "fulfillment_history"
      End Get
    End Property

    '--------------------------------------------------
    'Default constructor
    '--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

    '--------------------------------------------------
    'Public property procedures
    '--------------------------------------------------
    Public Property FulfillmentNumber() As Integer
      Get
        Return mvClassFields(FulfillmentHistoryFields.FulfillmentNumber).IntegerValue
      End Get
      Set(ByVal pValue As Integer)
        mvClassFields(FulfillmentHistoryFields.FulfillmentNumber).IntegerValue = pValue
      End Set
    End Property
    Public ReadOnly Property FulfilledBy() As String
      Get
        Return mvClassFields(FulfillmentHistoryFields.FulfilledBy).Value
      End Get
    End Property
    Public ReadOnly Property FulfilledOn() As String
      Get
        Return mvClassFields(FulfillmentHistoryFields.FulfilledOn).Value
      End Get
    End Property
    Public ReadOnly Property CancelledOn() As String
      Get
        Return mvClassFields(FulfillmentHistoryFields.CancelledOn).Value
      End Get
    End Property
    Public ReadOnly Property CancelledBy() As String
      Get
        Return mvClassFields(FulfillmentHistoryFields.CancelledBy).Value
      End Get
    End Property
    Public ReadOnly Property CancellationReason() As String
      Get
        Return mvClassFields(FulfillmentHistoryFields.CancellationReason).Value
      End Get
    End Property
    Public Property NumberOfDocuments() As Integer
      Get
        Return mvClassFields(FulfillmentHistoryFields.NumberOfDocuments).IntegerValue
      End Get
      Set(ByVal pValue As Integer)
        mvClassFields(FulfillmentHistoryFields.NumberOfDocuments).IntegerValue = pValue
      End Set
    End Property
    Public Property FulfilmentFilename As String
      Get
        Return mvClassFields(FulfillmentHistoryFields.FulfilmentFilename).Value
      End Get
      Set(ByVal pValue As String)
        If Not SharedUtilities.IsValidUNCPath(pValue) Then
          RaiseError(DataAccessErrors.daeUNCPathOnly)
        End If
        mvClassFields(FulfillmentHistoryFields.FulfilmentFilename).Value = pValue
      End Set
    End Property
#End Region

#Region "Non-AutoGenerated Code"
    Private mvDocumentList As String = ""
    Private mvDocumentsPerBatch As Integer

    Private Const DEFAULT_DOCUMENTS_PER_BATCH As Integer = 50
    Private mvDataFileName As String

    Protected Overrides Sub SetDefaults()
      'Add code here to initialise the class with default values for a new record
      If Not mvExisting Then
        mvClassFields.Item(FulfillmentHistoryFields.FulfilledOn).Value = TodaysDate()
        mvClassFields.Item(FulfillmentHistoryFields.FulfilledBy).Value = mvEnv.User.Logname
      End If
    End Sub
    Public Sub AddToDocumentList(ByVal pCMD As ContactMailingDocument)
      If mvDocumentList.Length > 0 Then mvDocumentList = mvDocumentList & ","
      mvDocumentList = mvDocumentList & pCMD.MailingDocumentNumber
      mvClassFields.Item(FulfillmentHistoryFields.NumberOfDocuments).IntegerValue = NumberOfDocuments + 1
    End Sub
    Public Property DocumentList() As String
      Get
        Return mvDocumentList
      End Get
      Set(ByVal pValue As String)
        mvDocumentList = pValue
      End Set
    End Property
    Public Sub SetFulfilled()
      'First save this record
      Save()
      If NumberOfDocuments > 0 Then
        Dim vUpdateFields As New CDBFields
        vUpdateFields.Add("fulfillment_number", FulfillmentNumber)
        Dim vWhereFields As New CDBFields
        vWhereFields.Add("mailing_document_number", CDBField.FieldTypes.cftLong, mvDocumentList, CDBField.FieldWhereOperators.fwoIn)
        mvEnv.Connection.UpdateRecords("contact_mailing_documents", vUpdateFields, vWhereFields, False)
      End If
    End Sub
    Public Sub SetFulfilled(pFulfilmentFilename As String)
      If pFulfilmentFilename.HasValue Then
        Me.FulfilmentFilename = pFulfilmentFilename
      End If
      SetFulfilled()
    End Sub
    Public Property DataFileName As String
      Get
        If String.IsNullOrWhiteSpace(mvDataFileName) Then
          Me.DataFileName = mvEnv.GetMailingFileName(False, FulfillmentNumber)
        End If
        Return mvDataFileName
      End Get
      Private Set(value As String)
        mvDataFileName = value
      End Set
    End Property

    Public ReadOnly Property DocumentsPerBatch() As Long
      Get
        If mvDocumentsPerBatch = 0 Then
          mvDocumentsPerBatch = IntegerValue(mvEnv.GetConfig("ml_max_document_count"))
          If mvDocumentsPerBatch <= 0 Then mvDocumentsPerBatch = DEFAULT_DOCUMENTS_PER_BATCH
        End If
        Return mvDocumentsPerBatch
      End Get
    End Property

    Public Sub SetDataFileName(pDataFileName As String, pAppendNumber As Boolean)
      Dim vDataFile As String = pDataFileName
      If pAppendNumber Then
        Dim vFileInfo As New System.IO.FileInfo(pDataFileName)
        Dim vFileName As String = System.IO.Path.GetFileNameWithoutExtension(pDataFileName)
        vDataFile = String.Format("{0}\{1}_{2}{3}", vFileInfo.DirectoryName, vFileName, Me.FulfillmentNumber, vFileInfo.Extension)
      End If
      Me.DataFileName = vDataFile
    End Sub

    Public Overloads Sub SetAsUnfulfilled(ByVal pCancReason As String, ByVal pMailingDocumentNumber As Integer)
      Dim vUpdateFields As New CDBFields
      Dim vWhereFields As New CDBFields

      vUpdateFields.Add("date_fulfilled", CDBField.FieldTypes.cftDate, "")

      If pMailingDocumentNumber = 0 Then
        mvClassFields(FulfillmentHistoryFields.CancellationReason).Value = pCancReason
        mvClassFields(FulfillmentHistoryFields.CancelledBy).Value = mvEnv.User.Logname
        mvClassFields(FulfillmentHistoryFields.CancelledOn).Value = TodaysDate()

        vWhereFields.Add("date_fulfilled", CDBField.FieldTypes.cftDate, FulfilledOn)
        vWhereFields.Add("contact_number", "SELECT contact_number FROM contact_mailing_documents WHERE fulfillment_number =" & FulfillmentNumber & " AND new_contact = 'Y'", CDBField.FieldWhereOperators.fwoIn)
        mvEnv.Connection.UpdateRecords("contact_incentive_responses", vUpdateFields, vWhereFields, False)
        mvEnv.Connection.UpdateRecords("contact_incentives", vUpdateFields, vWhereFields, False)

        vWhereFields.Remove("contact_number")
        vWhereFields.Add("order_number", "SELECT order_number FROM contact_mailing_documents WHERE fulfillment_number =" & FulfillmentNumber, CDBField.FieldWhereOperators.fwoIn)
        'BR13105: contact_incentive_responses, contact_incentives, new_orders and enclosures tables not being updated for unfulfill single CMD.
      Else
        vWhereFields.Add("order_number", "SELECT order_number FROM contact_mailing_documents WHERE mailing_document_number =" & pMailingDocumentNumber, CDBField.FieldWhereOperators.fwoIn)
      End If
      mvEnv.Connection.UpdateRecords("new_orders", vUpdateFields, vWhereFields, False)
      mvEnv.Connection.UpdateRecords("enclosures", vUpdateFields, vWhereFields, False)

      vUpdateFields.Clear()
      vWhereFields.Clear()
      vUpdateFields.Add("fulfillment_number", "")
      vWhereFields.Add("fulfillment_number", FulfillmentNumber)
      If pMailingDocumentNumber > 0 Then vWhereFields.Add("mailing_document_number", pMailingDocumentNumber.ToString)
      mvEnv.Connection.UpdateRecords("contact_mailing_documents", vUpdateFields, vWhereFields)
      If pMailingDocumentNumber > 0 Then
        mvClassFields.Item(FulfillmentHistoryFields.NumberOfDocuments).IntegerValue = NumberOfDocuments - 1
        Save("", True)
      Else
        Save()
      End If
    End Sub

    Public Overloads Sub SetAsUnfulfilled(ByVal pCancReason As String)
      SetAsUnfulfilled(pCancReason, 0)
    End Sub

#End Region
  End Class
End Namespace
