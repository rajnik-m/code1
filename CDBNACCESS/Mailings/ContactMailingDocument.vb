Namespace Access

  Public Class ContactMailingDocument
    Inherits CARERecord

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum ContactMailingDocumentFields
      AllFields = 0
      MailingDocumentNumber
      MailingTemplate
      SelectedParagraphs
      ContactNumber
      AddressNumber
      BatchNumber
      TransactionNumber
      PaymentPlanNumber
      GayePledgeNumber
      DeclarationNumber
      DocumentText
      CreatedBy
      CreatedOn
      FulfillmentNumber
      Mailing
      NewContact
      EarliestFulfilmentDate
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("mailing_document_number", CDBField.FieldTypes.cftLong)
        .Add("mailing_template")
        .Add("selected_paragraphs")
        .Add("contact_number", CDBField.FieldTypes.cftLong)
        .Add("address_number", CDBField.FieldTypes.cftLong)
        .Add("batch_number", CDBField.FieldTypes.cftLong)
        .Add("transaction_number", CDBField.FieldTypes.cftLong)
        .Add("order_number", CDBField.FieldTypes.cftLong)
        .Add("gaye_pledge_number", CDBField.FieldTypes.cftLong)
        .Add("declaration_number", CDBField.FieldTypes.cftLong)
        .Add("document_text", CDBField.FieldTypes.cftBulk)
        .Add("created_by")
        .Add("created_on", CDBField.FieldTypes.cftDate)
        .Add("fulfillment_number", CDBField.FieldTypes.cftLong)
        .Add("mailing")
        .Add("new_contact")
        .Add("earliest_fulfilment_date", CDBField.FieldTypes.cftDate)

        .Item(ContactMailingDocumentFields.MailingDocumentNumber).PrimaryKey = True
        .Item(ContactMailingDocumentFields.MailingTemplate).PrefixRequired = True
        .Item(ContactMailingDocumentFields.ContactNumber).PrefixRequired = True
        .Item(ContactMailingDocumentFields.AddressNumber).PrefixRequired = True

        .SetControlNumberField(ContactMailingDocumentFields.MailingDocumentNumber, "MD")
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return False
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "cmd"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "contact_mailing_documents"
      End Get
    End Property

    '--------------------------------------------------
    'Default constructor
    '--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

    '--------------------------------------------------
    'Public property procedures
    '--------------------------------------------------
    Public ReadOnly Property MailingDocumentNumber() As Integer
      Get
        Return mvClassFields(ContactMailingDocumentFields.MailingDocumentNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property MailingTemplateCode() As String
      Get
        Return mvClassFields(ContactMailingDocumentFields.MailingTemplate).Value
      End Get
    End Property
    Public Property SelectedParagraphs() As String
      Get
        Return mvClassFields(ContactMailingDocumentFields.SelectedParagraphs).Value
      End Get
      Set(ByVal value As String)
        mvClassFields(ContactMailingDocumentFields.SelectedParagraphs).Value = value
      End Set
    End Property
    Public ReadOnly Property ContactNumber() As Integer
      Get
        Return mvClassFields(ContactMailingDocumentFields.ContactNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property AddressNumber() As Integer
      Get
        Return mvClassFields(ContactMailingDocumentFields.AddressNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property BatchNumber() As Integer
      Get
        Return mvClassFields(ContactMailingDocumentFields.BatchNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property TransactionNumber() As Integer
      Get
        Return mvClassFields(ContactMailingDocumentFields.TransactionNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property PaymentPlanNumber() As Integer
      Get
        Return mvClassFields(ContactMailingDocumentFields.PaymentPlanNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property GayePledgeNumber() As Integer
      Get
        Return mvClassFields(ContactMailingDocumentFields.GayePledgeNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property DeclarationNumber() As Integer
      Get
        Return mvClassFields(ContactMailingDocumentFields.DeclarationNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property DocumentText() As String
      Get
        Return mvClassFields(ContactMailingDocumentFields.DocumentText).Value
      End Get
    End Property
    Public ReadOnly Property CreatedBy() As String
      Get
        Return mvClassFields(ContactMailingDocumentFields.CreatedBy).Value
      End Get
    End Property
    Public ReadOnly Property CreatedOn() As String
      Get
        Return mvClassFields(ContactMailingDocumentFields.CreatedOn).Value
      End Get
    End Property
    Public ReadOnly Property FulfillmentNumber() As Integer
      Get
        Return mvClassFields(ContactMailingDocumentFields.FulfillmentNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property Mailing() As String
      Get
        Return mvClassFields(ContactMailingDocumentFields.Mailing).Value
      End Get
    End Property
    Public ReadOnly Property NewContact() As Boolean
      Get
        Return mvClassFields(ContactMailingDocumentFields.NewContact).Bool
      End Get
    End Property
    Public Property EarliestFulfilmentDate() As String
      Get
        Return mvClassFields(ContactMailingDocumentFields.EarliestFulfilmentDate).Value
      End Get
      Set(ByVal value As String)
        mvClassFields(ContactMailingDocumentFields.EarliestFulfilmentDate).Value = value
      End Set
    End Property
#End Region

#Region "Non-AutoGenerated Code"

    Private mvMailingTemplate As MailingTemplate

    Protected Overrides Sub SetValid()
      MyBase.SetValid()
      If EarliestFulfilmentDate.Length = 0 Then
        mvClassFields(ContactMailingDocumentFields.EarliestFulfilmentDate).Value = TodaysDate()
      End If
    End Sub

    Public Sub InitFromTransaction(ByVal pBatchNumber As Integer, ByVal pTransactionNumber As Integer)
      MyBase.Init()
      Dim vWhereFields As New CDBFields()
      vWhereFields.Add(mvClassFields(ContactMailingDocumentFields.BatchNumber).Name, pBatchNumber)
      vWhereFields.Add(mvClassFields(ContactMailingDocumentFields.TransactionNumber).Name, pTransactionNumber)
      InitWithPrimaryKey(vWhereFields)
    End Sub

    Public ReadOnly Property MailingTemplate() As MailingTemplate
      Get
        If mvMailingTemplate Is Nothing Then
          mvMailingTemplate = New MailingTemplate(mvEnv)
          mvMailingTemplate.Init(MailingTemplateCode)
        End If
        Return mvMailingTemplate
      End Get
    End Property

    Public Sub InitFromCDBDataRow(ByVal pRow As CDBDataRow)
      Init()
      mvExisting = True
      For Each vClassField As ClassField In mvClassFields
        If vClassField.InDatabase AndAlso vClassField.FieldType <> CDBField.FieldTypes.cftBulk Then vClassField.SetValue = pRow.Item(vClassField.Name).ToString
      Next
    End Sub

    Friend Sub InitFromTemplate(ByVal pMailingTemplate As MailingTemplate, ByVal pBT As BatchTransaction, ByVal pPaymentPlan As PaymentPlan, ByVal pMailingCode As String, ByVal pContact As Contact, ByVal pGiftAidDeclaration As GiftAidDeclaration, ByVal pGAYEPledge As PreTaxPledge, ByVal pNewPayerContact As Boolean, ByVal pOrganisation As Organisation)
      mvClassFields.Item(ContactMailingDocumentFields.MailingTemplate).Value = pMailingTemplate.MailingTemplateCode
      If pBT.Existing Then
        If pBT.Mailing.Length > 0 Then
          mvClassFields.Item(ContactMailingDocumentFields.Mailing).Value = pBT.Mailing
        Else
          mvClassFields.Item(ContactMailingDocumentFields.Mailing).Value = pMailingCode
        End If
        mvClassFields.Item(ContactMailingDocumentFields.ContactNumber).IntegerValue = pBT.MailingContactNumber
        mvClassFields.Item(ContactMailingDocumentFields.AddressNumber).IntegerValue = pBT.MailingAddressNumber
        mvClassFields.Item(ContactMailingDocumentFields.BatchNumber).IntegerValue = pBT.BatchNumber
        mvClassFields.Item(ContactMailingDocumentFields.TransactionNumber).IntegerValue = pBT.TransactionNumber
        If Not pPaymentPlan Is Nothing Then
          If pPaymentPlan.PlanNumber > 0 Then mvClassFields.Item(ContactMailingDocumentFields.PaymentPlanNumber).IntegerValue = pPaymentPlan.PlanNumber
        End If
        If pGiftAidDeclaration.DeclarationNumber > 0 Then mvClassFields.Item(ContactMailingDocumentFields.DeclarationNumber).IntegerValue = pGiftAidDeclaration.DeclarationNumber
        If pGAYEPledge.GayePledgeNumber > 0 Then mvClassFields.Item(ContactMailingDocumentFields.GayePledgeNumber).IntegerValue = pGAYEPledge.GayePledgeNumber
      ElseIf pPaymentPlan.PlanNumber > 0 Then
        mvClassFields.Item(ContactMailingDocumentFields.Mailing).Value = pMailingCode
        mvClassFields.Item(ContactMailingDocumentFields.ContactNumber).IntegerValue = pPaymentPlan.ContactNumber
        mvClassFields.Item(ContactMailingDocumentFields.AddressNumber).IntegerValue = pPaymentPlan.AddressNumber
        mvClassFields.Item(ContactMailingDocumentFields.PaymentPlanNumber).IntegerValue = pPaymentPlan.PlanNumber
        If pGiftAidDeclaration.DeclarationNumber > 0 Then mvClassFields.Item(ContactMailingDocumentFields.DeclarationNumber).IntegerValue = pGiftAidDeclaration.DeclarationNumber
        If pGAYEPledge.GayePledgeNumber > 0 Then mvClassFields.Item(ContactMailingDocumentFields.GayePledgeNumber).IntegerValue = pGAYEPledge.GayePledgeNumber
      ElseIf pGiftAidDeclaration.DeclarationNumber > 0 Then
        mvClassFields.Item(ContactMailingDocumentFields.Mailing).Value = pMailingCode
        mvClassFields.Item(ContactMailingDocumentFields.ContactNumber).IntegerValue = pGiftAidDeclaration.ContactNumber
        mvClassFields.Item(ContactMailingDocumentFields.AddressNumber).IntegerValue = pContact.AddressNumber
        mvClassFields.Item(ContactMailingDocumentFields.DeclarationNumber).IntegerValue = pGiftAidDeclaration.DeclarationNumber
        If pGAYEPledge.GAYEPledgeNumber > 0 Then mvClassFields.Item(ContactMailingDocumentFields.GayePledgeNumber).Value = CStr(pGAYEPledge.GAYEPledgeNumber)
      ElseIf pGAYEPledge.GAYEPledgeNumber > 0 Then
        mvClassFields.Item(ContactMailingDocumentFields.Mailing).Value = pMailingCode
        mvClassFields.Item(ContactMailingDocumentFields.ContactNumber).IntegerValue = pGAYEPledge.ContactNumber
        mvClassFields.Item(ContactMailingDocumentFields.AddressNumber).IntegerValue = pGAYEPledge.AddressNumber
        mvClassFields.Item(ContactMailingDocumentFields.GayePledgeNumber).IntegerValue = pGAYEPledge.GayePledgeNumber
      ElseIf Not pOrganisation Is Nothing Then
        mvClassFields.Item(ContactMailingDocumentFields.Mailing).Value = pMailingCode
        mvClassFields.Item(ContactMailingDocumentFields.ContactNumber).IntegerValue = pOrganisation.ContactNumber
        mvClassFields.Item(ContactMailingDocumentFields.AddressNumber).IntegerValue = pOrganisation.AddressNumber
      ElseIf pContact.Existing Then
        mvClassFields.Item(ContactMailingDocumentFields.Mailing).Value = pMailingCode
        mvClassFields.Item(ContactMailingDocumentFields.ContactNumber).IntegerValue = pContact.ContactNumber
        mvClassFields.Item(ContactMailingDocumentFields.AddressNumber).IntegerValue = pContact.AddressNumber
      End If
      mvClassFields.Item(ContactMailingDocumentFields.NewContact).Bool = pNewPayerContact
    End Sub

    Public Sub SaveDocument(ByVal pDocumentName As String)
      'BR17793 - Do not save Mailing documents externally
      Dim vFields As New CDBFields
      vFields.Add("document_text", CDBField.FieldTypes.cftFile, pDocumentName)
      mvEnv.Connection.UpdateRecords((mvClassFields.DatabaseTableName), vFields, mvClassFields.WhereFields)
    End Sub

    Public Overloads Sub Delete(Optional ByVal pOnlyIfUnfulfilled As Boolean = True)
      'pOnlyIfUnfulfilled is True  = only delete the CMD if it has not yet been fulfilled.
      'pOnlyIfUnfulfilled is False = delete the CMD regardless of whether it has been fulfilled.
      If Existing AndAlso (Not pOnlyIfUnfulfilled OrElse (pOnlyIfUnfulfilled AndAlso FulfillmentNumber = 0)) Then MyBase.Delete()
    End Sub

#End Region
  End Class
End Namespace
