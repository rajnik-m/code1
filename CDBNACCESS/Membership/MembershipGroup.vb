Namespace Access

  Public Class MembershipGroup
    Inherits CARERecord

#Region "AutoGenerated Code"

    '--------------------------------------------------
    'Enum defining all the fields in the table
    '--------------------------------------------------
    Private Enum MembershipGroupFields
      AllFields = 0
      MembershipGroupNumber
      MembershipNumber
      OrganisationNumber
      DefaultGroup
      ValidFrom
      ValidTo
      IsCurrent
      AmendedBy
      AmendedOn
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("membership_group_number", CDBField.FieldTypes.cftInteger)
        .Add("membership_number", CDBField.FieldTypes.cftInteger)
        .Add("organisation_number", CDBField.FieldTypes.cftInteger)
        .Add("default_group")
        .Add("valid_from", CDBField.FieldTypes.cftDate)
        .Add("valid_to", CDBField.FieldTypes.cftDate)
        .Add("is_current")

        mvClassFields.Item(MembershipGroupFields.MembershipGroupNumber).PrimaryKey = True

        mvClassFields.Item(MembershipGroupFields.MembershipNumber).PrefixRequired = True
        mvClassFields.Item(MembershipGroupFields.OrganisationNumber).PrefixRequired = True
        mvClassFields.SetControlNumberField(MembershipGroupFields.MembershipGroupNumber, "MG")
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "mg"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "membership_groups"
      End Get
    End Property

    '--------------------------------------------------
    'Default constructor
    '--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

    '--------------------------------------------------
    'Public property procedures
    '--------------------------------------------------

    Public ReadOnly Property MembershipGroupNumber() As Integer
      Get
        Return mvClassFields.Item(MembershipGroupFields.MembershipGroupNumber).IntegerValue
      End Get
    End Property

    Public ReadOnly Property MembershipNumber() As Integer
      Get
        Return mvClassFields(MembershipGroupFields.MembershipNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property OrganisationNumber() As Integer
      Get
        Return mvClassFields(MembershipGroupFields.OrganisationNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property DefaultGroup() As Boolean
      Get
        Return mvClassFields(MembershipGroupFields.DefaultGroup).Bool
      End Get
    End Property
    Public ReadOnly Property ValidFrom() As String
      Get
        Return mvClassFields(MembershipGroupFields.ValidFrom).Value
      End Get
    End Property
    Public ReadOnly Property ValidTo() As String
      Get
        Return mvClassFields(MembershipGroupFields.ValidTo).Value
      End Get
    End Property
    Public ReadOnly Property IsCurrent() As String
      Get
        Return mvClassFields(MembershipGroupFields.IsCurrent).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(MembershipGroupFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(MembershipGroupFields.AmendedOn).Value
      End Get
    End Property
#End Region

#Region "Non autoGenerated Code"

    Protected Overrides Sub SetDefaults()
      mvClassFields(MembershipGroupFields.DefaultGroup).Value = "N"
      mvClassFields(MembershipGroupFields.IsCurrent).Value = "N"
    End Sub

    Protected Overrides Sub SetValid()
      MyBase.SetValid()
      SetCurrent()
    End Sub


    Public Sub ImportSetGroupsNonDefault(ByVal pEnv As CDBEnvironment, ByVal pMembershipGroupNumber As Integer, ByVal pMembershipNumber As Integer, ByVal pOrganisationNumber As Integer)
      Init()
      mvClassFields.Item(MembershipGroupFields.MembershipNumber).IntegerValue = pMembershipNumber
      SetGroupsNonDefault(pOrganisationNumber, pMembershipGroupNumber)
      mvClassFields.Item(MembershipGroupFields.MembershipNumber).IntegerValue = 0 'Just in case!!
    End Sub

    Private Sub SetGroupsNonDefault(ByVal pNewOrganisationNumber As Integer, Optional ByVal pNewMembershipGroupNumber As Integer = 0)
      Dim vUpdateFields As New CDBFields
      Dim vWhereFields As New CDBFields
      Dim vHistoryNumber As Long
      Dim vSQL As String

      vWhereFields.Add("membership_number", MembershipNumber)
      vWhereFields.Add("default_group", "Y")
      If pNewMembershipGroupNumber > 0 Then vWhereFields.Add("membership_group_number", pNewMembershipGroupNumber, CDBField.FieldWhereOperators.fwoNotEqual)

      '1) Insert a record into the MembershipGroupHistory table for the existing default MembershipGroup
      vHistoryNumber = mvEnv.GetControlNumber("MH")

      vSQL = "INSERT INTO membership_group_history (member_group_history_number,membership_number,old_organisation_number,new_organisation_number,change_date,amended_by,amended_on)"
      vSQL = vSQL & " SELECT " & vHistoryNumber & ", membership_number, organisation_number, " & pNewOrganisationNumber & ", " & mvEnv.Connection.SQLLiteral("", Date.Today) & ", '" & mvEnv.User.Logname & "', " & mvEnv.Connection.SQLLiteral("", Date.Today)
      vSQL = vSQL & " FROM membership_groups WHERE " & mvEnv.Connection.WhereClause(vWhereFields)
      mvEnv.Connection.ExecuteSQL(vSQL, CDBConnection.cdbExecuteConstants.sqlIgnoreError)      'Ignore errors as there may not be a default record

      '2) Update existing default MembershipGroup to be non-default
      vUpdateFields.Add("default_group", "N")
      vUpdateFields.AddAmendedOnBy(mvEnv.User.Logname)
      mvEnv.Connection.UpdateRecords("membership_groups", vUpdateFields, vWhereFields, False)    'Ignore errors as there may not be a default record
    End Sub

    Public Overrides Sub Update(ByVal pParams As CDBParameters)
      'This will just update the record without any deduplication

      With mvClassFields
        .Item(MembershipGroupFields.DefaultGroup).Value = pParams.OptionalValue("DefaultGroup", .Item(MembershipGroupFields.DefaultGroup).Value)
        .Item(MembershipGroupFields.ValidFrom).Value = pParams.OptionalValue("ValidFrom", ValidFrom)
        .Item(MembershipGroupFields.ValidTo).Value = pParams.OptionalValue("ValidTo", ValidTo)
      End With
      SetCurrent()
      If DefaultGroup Then SetGroupsNonDefault(OrganisationNumber)
    End Sub

#End Region

  End Class
End Namespace
