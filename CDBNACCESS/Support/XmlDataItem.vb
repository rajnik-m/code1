Namespace Access

  Public Class XmlDataItem
    Inherits CARERecord

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum XmlDataItemFields
      AllFields = 0
      XmlItemNumber
      XmlDataType
      ItemDesc
      ItemXml
      Client
      Department
      Logname
      ContactGroup
      AmendedBy
      AmendedOn
    End Enum

'--------------------------------------------------
'Required overrides for the class
'--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("xml_item_number", CDBField.FieldTypes.cftLong)
        .Add("xml_data_type")
        .Add("item_desc")
        .Add("item_xml", CDBField.FieldTypes.cftMemo)
        .Add("client")
        .Add("department")
        .Add("logname")
        .Add("contact_group")

        .Item(XmlDataItemFields.XmlItemNumber).PrimaryKey = True
        .SetControlNumberField(XmlDataItemFields.XmlItemNumber, "XI")
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "xdi"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "xml_data_items"
      End Get
    End Property

'--------------------------------------------------
'Default constructor
'--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

'--------------------------------------------------
'Public property procedures
'--------------------------------------------------
    Public ReadOnly Property XmlItemNumber() As Integer
      Get
        Return mvClassFields(XmlDataItemFields.XmlItemNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property XmlDataType() As String
      Get
        Return mvClassFields(XmlDataItemFields.XmlDataType).Value
      End Get
    End Property
    Public ReadOnly Property ItemDesc() As String
      Get
        Return mvClassFields(XmlDataItemFields.ItemDesc).Value
      End Get
    End Property
    Public ReadOnly Property ItemXml() As String
      Get
        Return mvClassFields(XmlDataItemFields.ItemXml).Value
      End Get
    End Property
    Public ReadOnly Property Client() As String
      Get
        Return mvClassFields(XmlDataItemFields.Client).Value
      End Get
    End Property
    Public ReadOnly Property Department() As String
      Get
        Return mvClassFields(XmlDataItemFields.Department).Value
      End Get
    End Property
    Public ReadOnly Property Logname() As String
      Get
        Return mvClassFields(XmlDataItemFields.Logname).Value
      End Get
    End Property
    Public ReadOnly Property ContactGroup() As String
      Get
        Return mvClassFields(XmlDataItemFields.ContactGroup).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(XmlDataItemFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(XmlDataItemFields.AmendedOn).Value
      End Get
    End Property
#End Region

#Region "Non-AutoGenerated Code"

    Public Function ItemExists(ByVal pDataType As String, ByVal pDescription As String) As Boolean
      Dim vWhereFields As New CDBFields
      vWhereFields.Add("xml_data_type", pDataType)
      vWhereFields.Add("item_desc", pDescription)
      InitWithPrimaryKey(vWhereFields)
      Return Me.Existing
    End Function

    Public Function ItemExists(ByVal pDataType As String, ByVal pContactGroup As String, ByVal pClient As String, ByVal pDepartment As String, ByVal pLogname As String) As Boolean
      Return ItemExists(pDataType, pContactGroup, "", pClient, pDepartment, pLogname)
    End Function

    Public Function ItemExists(ByVal pDataType As String, ByVal pContactGroup As String, pDescription As String, ByVal pClient As String, ByVal pDepartment As String, ByVal pLogname As String) As Boolean
      Init()
      Dim vWhereFields As New CDBFields
      vWhereFields.Add(mvClassFields(XmlDataItemFields.XmlDataType).Name, pDataType)
      vWhereFields.Add(mvClassFields(XmlDataItemFields.ContactGroup).Name, pContactGroup)
      If pDescription.Length > 0 Then vWhereFields.Add(mvClassFields(XmlDataItemFields.ItemDesc).Name, pDescription)
      vWhereFields.Add(mvClassFields(XmlDataItemFields.Client).Name, pClient)
      vWhereFields.Add(mvClassFields(XmlDataItemFields.Department).Name, pDepartment)
      vWhereFields.Add(mvClassFields(XmlDataItemFields.Logname).Name, pLogname)
      InitWithPrimaryKey(vWhereFields)
      Return Me.Existing
    End Function


#End Region


  End Class
End Namespace
