Namespace Access

  Public Class EventTopic
    Inherits CARERecord

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum EventTopicFields
      AllFields = 0
      EventNumber
      Topic
      SubTopic
      Quantity
      Notes
      AmendedBy
      AmendedOn
    End Enum

'--------------------------------------------------
'Required overrides for the class
'--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("event_number", CDBField.FieldTypes.cftLong)
        .Add("topic")
        .Add("sub_topic")
        .Add("quantity", CDBField.FieldTypes.cftNumeric)
        .Add("notes", CDBField.FieldTypes.cftMemo)

        .Item(EventTopicFields.EventNumber).PrimaryKey = True
        .Item(EventTopicFields.Topic).PrimaryKey = True
        .Item(EventTopicFields.SubTopic).PrimaryKey = True
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "et"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "event_topics"
      End Get
    End Property

'--------------------------------------------------
'Default constructor
'--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

'--------------------------------------------------
'Public property procedures
'--------------------------------------------------
    Public ReadOnly Property EventNumber() As Integer
      Get
        Return mvClassFields(EventTopicFields.EventNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property Topic() As String
      Get
        Return mvClassFields(EventTopicFields.Topic).Value
      End Get
    End Property
    Public ReadOnly Property SubTopic() As String
      Get
        Return mvClassFields(EventTopicFields.SubTopic).Value
      End Get
    End Property
    Public ReadOnly Property Quantity() As Double
      Get
        Return mvClassFields(EventTopicFields.Quantity).DoubleValue
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(EventTopicFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(EventTopicFields.AmendedOn).Value
      End Get
    End Property
    Public ReadOnly Property Notes() As String
      Get
        Return mvClassFields(EventTopicFields.Notes).Value
      End Get
    End Property
#End Region

#Region "Non AutoGenerated Code"

    Public Overloads Sub Init(ByVal pEventNumber As Integer, ByVal pTopic As String, ByVal pSubTopic As String)
      CheckClassFields()
      Dim vWhereFields As New CDBFields
      If pEventNumber > 0 AndAlso pTopic.Length > 0 AndAlso pSubTopic.Length > 0 Then
        vWhereFields.Add(mvClassFields(EventTopicFields.EventNumber).Name, pEventNumber)
        vWhereFields.Add(mvClassFields(EventTopicFields.Topic).Name, pTopic)
        vWhereFields.Add(mvClassFields(EventTopicFields.SubTopic).Name, pSubTopic)
        InitWithPrimaryKey(vWhereFields)
      Else
        Init()
      End If
    End Sub

    Public Overloads Sub Create(ByVal pEventNumber As Integer, ByVal pTopic As String, ByVal pSubTopic As String, ByVal pQuantity As String, ByVal pNotes As String)
      InitClassFields()
      mvClassFields.Item(EventTopicFields.EventNumber).Value = CStr(pEventNumber)
      mvClassFields.Item(EventTopicFields.Topic).Value = pTopic
      mvClassFields.Item(EventTopicFields.SubTopic).Value = pSubTopic
      mvClassFields.Item(EventTopicFields.Quantity).Value = pQuantity
      mvClassFields.Item(EventTopicFields.Notes).Value = pNotes
    End Sub

    Public Overloads Sub Update(ByVal pQuantity As String, ByVal pNotes As String)
      mvClassFields.Item(EventTopicFields.Quantity).Value = pQuantity
      mvClassFields.Item(EventTopicFields.Notes).Value = pNotes
    End Sub

    Friend Sub InitFromTopic(ByVal pEventTopic As EventTopic, ByVal pNewEvent As CDBEvent)
      With pEventTopic
        mvClassFields.Item(EventTopicFields.EventNumber).IntegerValue = pNewEvent.EventNumber
        mvClassFields.Item(EventTopicFields.Topic).Value = .Topic
        mvClassFields.Item(EventTopicFields.SubTopic).Value = .SubTopic
        mvClassFields.Item(EventTopicFields.Quantity).DoubleValue = .Quantity
      End With
    End Sub

#End Region
  End Class
End Namespace
