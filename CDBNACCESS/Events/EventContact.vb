Namespace Access

  Public Class EventContact
    Inherits CARERecord

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum EventContactFields
      AllFields = 0
      EventNumber
      ContactNumber
      AddressNumber
      EventContactRelationship
      Notes
      AmendedBy
      AmendedOn
    End Enum

'--------------------------------------------------
'Required overrides for the class
'--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("event_number", CDBField.FieldTypes.cftLong)
        .Add("contact_number", CDBField.FieldTypes.cftLong)
        .Add("address_number", CDBField.FieldTypes.cftLong)
        .Add("event_contact_relationship")
        .Add("notes", CDBField.FieldTypes.cftMemo)

        .Item(EventContactFields.EventNumber).PrimaryKey = True

        .Item(EventContactFields.ContactNumber).PrimaryKey = True
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "ec"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "event_contacts"
      End Get
    End Property

'--------------------------------------------------
'Default constructor
'--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

'--------------------------------------------------
'Public property procedures
'--------------------------------------------------
    Public ReadOnly Property EventNumber() As Integer
      Get
        Return mvClassFields(EventContactFields.EventNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property ContactNumber() As Integer
      Get
        Return mvClassFields(EventContactFields.ContactNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property AddressNumber() As Integer
      Get
        Return mvClassFields(EventContactFields.AddressNumber).IntegerValue
      End Get
    End Property
    Public ReadOnly Property EventContactRelationship() As String
      Get
        Return mvClassFields(EventContactFields.EventContactRelationship).Value
      End Get
    End Property
    Public ReadOnly Property Notes() As String
      Get
        Return mvClassFields(EventContactFields.Notes).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(EventContactFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(EventContactFields.AmendedOn).Value
      End Get
    End Property
#End Region

#Region "Non AutoGenerated Code"

    Public Overloads Sub Init(ByVal pEventNumber As Integer, ByVal pContactNumber As Integer)
      If pEventNumber > 0 Then
        CheckClassFields()
        Dim vWhereFields As New CDBFields
        vWhereFields.Add(mvClassFields(EventContactFields.EventNumber).Name, pEventNumber)
        vWhereFields.Add(mvClassFields(EventContactFields.ContactNumber).Name, pContactNumber)
        MyBase.InitWithPrimaryKey(vWhereFields)
      Else
        Init()
      End If
    End Sub
#End Region

  End Class
End Namespace
