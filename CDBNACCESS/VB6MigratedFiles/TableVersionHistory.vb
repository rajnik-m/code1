Namespace Access

  Public Class TableVersionHistory
    Inherits CARERecord
#Region "AutoGenerated Code"

    '--------------------------------------------------
    'Enum defining all the fields in the table
    '--------------------------------------------------
    Private Enum TableVersionHistoryFields
      AllFields = 0
      TableName
      VersionNumber
      ReleaseNumber
      Logname
      ChangeDate
      ChangeDescription
      ChangeNumber
      AmendedBy
      AmendedOn
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("table_name")
        .Add("version_number")
        .Add("release_number")
        .Add("logname")
        .Add("change_date", CDBField.FieldTypes.cftDate)
        .Add("change_description")
        .Add("change_number", CDBField.FieldTypes.cftLong)

        'Although there may be existing records with the same table name and change number
        'there should not be any in future therefore we can use them as the primary key
        .Item(TableVersionHistoryFields.TableName).PrimaryKey = True
        .Item(TableVersionHistoryFields.ChangeNumber).PrimaryKey = True
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "tvh"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "table_version_history"
      End Get
    End Property

    '--------------------------------------------------
    'Default constructor
    '--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

    '--------------------------------------------------
    'Public property procedures
    '--------------------------------------------------
    Public ReadOnly Property TableName() As String
      Get
        Return mvClassFields(TableVersionHistoryFields.TableName).Value
      End Get
    End Property
    Public ReadOnly Property VersionNumber() As String
      Get
        Return mvClassFields(TableVersionHistoryFields.VersionNumber).Value
      End Get
    End Property
    Public ReadOnly Property ReleaseNumber() As String
      Get
        Return mvClassFields(TableVersionHistoryFields.ReleaseNumber).Value
      End Get
    End Property
    Public ReadOnly Property Logname() As String
      Get
        Return mvClassFields(TableVersionHistoryFields.Logname).Value
      End Get
    End Property
    Public ReadOnly Property ChangeDate() As String
      Get
        Return mvClassFields(TableVersionHistoryFields.ChangeDate).Value
      End Get
    End Property
    Public ReadOnly Property ChangeDescription() As String
      Get
        Return mvClassFields(TableVersionHistoryFields.ChangeDescription).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(TableVersionHistoryFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(TableVersionHistoryFields.AmendedOn).Value
      End Get
    End Property
    Public ReadOnly Property ChangeNumber() As Integer
      Get
        Return mvClassFields(TableVersionHistoryFields.ChangeNumber).IntegerValue
      End Get
    End Property
#End Region

    Public Overloads Sub Init(ByVal pEnv As CDBEnvironment, Optional ByVal pTableName As String = "", Optional ByVal pChangeNumber As Integer = 0)
      MyBase.Init()
      Dim vRecordSet As CDBRecordSet
      mvEnv = pEnv
      If Len(pTableName) > 0 And pChangeNumber > 0 Then
        vRecordSet = pEnv.Connection.GetRecordSet("SELECT " & GetRecordSetFields() & " FROM table_version_history tvh WHERE table_name = '" & pTableName & "' AND change_number = " & pChangeNumber)
        If vRecordSet.Fetch() Then
          InitFromRecordSet(vRecordSet)
        Else
          InitClassFields()
          SetDefaults()
        End If
        vRecordSet.CloseRecordSet()
      Else
        InitClassFields()
        SetDefaults()
      End If
    End Sub
  End Class
End Namespace
