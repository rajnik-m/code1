Namespace Access

  Public Class OwnershipGroup
    Inherits CARERecord

#Region "AutoGenerated Code"

    '--------------------------------------------------
    'Enum defining all the fields in the table
    '--------------------------------------------------
    Private Enum OwnershipGroupFields
      AllFields = 0
      OwnershipGroup
      OwnershipGroupDesc
      PrincipalDepartment
      PrincipalDepartmentLogname
      ReadAccessText
      ViewAccessText
      Notes
      AmendedBy
      AmendedOn
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("ownership_group")
        .Add("ownership_group_desc")
        .Add("principal_department")
        .Add("principal_department_logname")
        .Add("read_access_text")
        .Add("view_access_text")
        .Add("notes")

        .Item(OwnershipGroupFields.OwnershipGroup).PrimaryKey = True
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "og"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "ownership_groups"
      End Get
    End Property

    '--------------------------------------------------
    'Default constructor
    '--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

    '--------------------------------------------------
    'Public property procedures
    '--------------------------------------------------
    Public ReadOnly Property OwnershipGroupCode() As String
      Get
        Return mvClassFields(OwnershipGroupFields.OwnershipGroup).Value
      End Get
    End Property
    Public ReadOnly Property OwnershipGroupDesc() As String
      Get
        Return mvClassFields(OwnershipGroupFields.OwnershipGroupDesc).Value
      End Get
    End Property
    Public ReadOnly Property PrincipalDepartment() As String
      Get
        Return mvClassFields(OwnershipGroupFields.PrincipalDepartment).Value
      End Get
    End Property
    Public ReadOnly Property PrincipalDepartmentLogname() As String
      Get
        Return mvClassFields(OwnershipGroupFields.PrincipalDepartmentLogname).Value
      End Get
    End Property
    Public ReadOnly Property ReadAccessText() As String
      Get
        Return mvClassFields(OwnershipGroupFields.ReadAccessText).Value
      End Get
    End Property
    Public ReadOnly Property ViewAccessText() As String
      Get
        Return mvClassFields(OwnershipGroupFields.ViewAccessText).Value
      End Get
    End Property
    Public ReadOnly Property Notes() As String
      Get
        Return mvClassFields(OwnershipGroupFields.Notes).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(OwnershipGroupFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(OwnershipGroupFields.AmendedOn).Value
      End Get
    End Property
#End Region

#Region "Non-AutoGenerated Code"

    Public Enum OwnershipAccessLevelTypes
      oaltNone
      oaltBrowse
      oaltRead
      oaltWrite
    End Enum

    Public Shared Function GetOwnershipAccessLevelCode(ByVal pTypeCode As OwnershipAccessLevelTypes) As String
      Select Case pTypeCode
        Case OwnershipAccessLevelTypes.oaltWrite
          Return "W"
        Case OwnershipAccessLevelTypes.oaltRead
          Return "R"
        Case OwnershipAccessLevelTypes.oaltBrowse
          Return "B"
        Case Else
          Return ""
      End Select
    End Function

    Public Shared Sub AddUserWhereFields(ByVal pEnv As CDBEnvironment, ByVal pWhereFields As CDBFields, ByVal pAccessLevel As OwnershipAccessLevelTypes)
      With pWhereFields
        .Add("ogu.ownership_access_level", GetOwnershipAccessLevelCode(pAccessLevel))
        .Add("ogu.valid_from", CDBField.FieldTypes.cftDate, TodaysDate, CDBField.FieldWhereOperators.fwoLessThanEqual)
        .Add("ogu.valid_to", CDBField.FieldTypes.cftDate, TodaysDate, CDBField.FieldWhereOperators.fwoGreaterThanEqual Or CDBField.FieldWhereOperators.fwoOpenBracket)
        .Add("ogu.valid_to#1", CDBField.FieldTypes.cftDate, "", CDBField.FieldWhereOperators.fwoOR Or CDBField.FieldWhereOperators.fwoCloseBracket)
        .AddJoin("ogu.logname", "u.logname")
        .Add("history_only", "N")
      End With
    End Sub

    Public Overrides Sub Delete(ByVal pAmendedBy As String, ByVal pAudit As Boolean, ByVal pJournalNumber As Integer)
      Dim vWhereFields As New CDBFields
      vWhereFields.Add(mvClassFields(OwnershipGroupFields.OwnershipGroup).Name, OwnershipGroupCode)
      If mvEnv.Connection.GetCount("contacts", vWhereFields) > 0 Then RaiseError(DataAccessErrors.daeReferencedInOtherTable, "Contacts")
      If mvEnv.Connection.GetCount("organisations", vWhereFields) > 0 Then RaiseError(DataAccessErrors.daeReferencedInOtherTable, "Organisations")
      If mvEnv.Connection.GetCount("users", vWhereFields) > 0 Then RaiseError(DataAccessErrors.daeReferencedInOtherTable, "Users")
      If mvEnv.Connection.GetCount("department_ownership_defaults", vWhereFields) > 0 Then RaiseError(DataAccessErrors.daeReferencedInOtherTable, "department_ownership_defaults")
      If mvEnv.Connection.GetCount("branches", vWhereFields) > 0 Then RaiseError(DataAccessErrors.daeReferencedInOtherTable, "branches")

      mvEnv.Connection.DeleteRecords("ownership_group_users", vWhereFields, False)
      MyBase.Delete(pAmendedBy, pAudit, pJournalNumber)
    End Sub

#End Region

  End Class
End Namespace
