Namespace Access

  Public Class PortalPasswordHistory
    Inherits CARERecord

#Region "AutoGenerated Code"

'--------------------------------------------------
'Enum defining all the fields in the table
'--------------------------------------------------
    Private Enum PortalPasswordHistoryFields
      AllFields = 0
      UserName
      Password
      CreatedOn
      CreatedBy
      AmendedBy
      AmendedOn
    End Enum

    '--------------------------------------------------
    'Required overrides for the class
    '--------------------------------------------------
    Protected Overrides Sub AddFields()
      With mvClassFields
        .Add("user_name")
        .Add("password", CDBField.FieldTypes.cftBinary)
        .Add("created_on", CDBField.FieldTypes.cftTime)
        .Add("created_by")
      End With
    End Sub

    Protected Overrides ReadOnly Property SupportsAmendedOnAndBy() As Boolean
      Get
        Return True
      End Get
    End Property
    Protected Overrides ReadOnly Property TableAlias() As String
      Get
        Return "pph"
      End Get
    End Property
    Protected Overrides ReadOnly Property DatabaseTableName() As String
      Get
        Return "portal_password_history"
      End Get
    End Property

'--------------------------------------------------
'Default constructor
'--------------------------------------------------
    Public Sub New(ByVal pEnv As CDBEnvironment)
      MyBase.New(pEnv)
    End Sub

'--------------------------------------------------
'Public property procedures
'--------------------------------------------------
    Public ReadOnly Property UserName() As String
      Get
        Return mvClassFields(PortalPasswordHistoryFields.UserName).Value
      End Get
    End Property
    Public ReadOnly Property Password() As Byte()
      Get
        Return mvClassFields(PortalPasswordHistoryFields.Password).ByteValue
      End Get
    End Property
    Public ReadOnly Property CreatedBy() As String
      Get
        Return mvClassFields(PortalPasswordHistoryFields.CreatedBy).Value
      End Get
    End Property
    Public ReadOnly Property CreatedOn() As String
      Get
        Return mvClassFields(PortalPasswordHistoryFields.CreatedOn).Value
      End Get
    End Property
    Public ReadOnly Property AmendedBy() As String
      Get
        Return mvClassFields(PortalPasswordHistoryFields.AmendedBy).Value
      End Get
    End Property
    Public ReadOnly Property AmendedOn() As String
      Get
        Return mvClassFields(PortalPasswordHistoryFields.AmendedOn).Value
      End Get
    End Property
#End Region

#Region "Non-AutoGenerated Code"

    Private mvPortalPasswordHistory As PortalPasswordHistory

    Protected Overrides Sub ClearFields()
      mvPortalPasswordHistory = Nothing
    End Sub

    Protected Overrides Sub SetValid()
      'Add code here to ensure all values are valid before saving
      MyBase.SetValid()
      mvClassFields.Item(PortalPasswordHistoryFields.CreatedOn).Value = TodaysDateAndTime()
      mvClassFields.Item(PortalPasswordHistoryFields.CreatedBy).Value = mvEnv.User.UserID
    End Sub

    Public Overloads Sub Init(ByVal pUserName As String, ByVal pPassword As String)
      MyBase.Init()
      Dim vWhereFields As New CDBFields()
      vWhereFields.Add(mvClassFields(PortalPasswordHistoryFields.UserName).Name, pUserName)
      vWhereFields.Add(mvClassFields(PortalPasswordHistoryFields.Password).Name, pPassword)
      InitWithPrimaryKey(vWhereFields)
    End Sub

    Public Overloads Sub Delete(pEnv As CDBEnvironment)
      mvClassFields.Delete(pEnv.Connection)
    End Sub
    Protected Overloads Sub PreValidateUpdateParameters(ByVal pParameterList As CDBParameters)
      MyBase.PreValidateUpdateParameters(pParameterList)
      Throw New NotImplementedException()
    End Sub

    Protected Friend Sub SetUserNameAndPassword(ByVal pUserName As String, ByVal pPassword As Byte())
      mvClassFields.Item(PortalPasswordHistoryFields.Password).DBParam = mvEnv.Connection.GetBinaryDBParameter("EncryptedPassword", pPassword, "Password")
      mvClassFields.Item(PortalPasswordHistoryFields.Password).Value = Convert.ToBase64String(pPassword)
      mvClassFields.Item(PortalPasswordHistoryFields.UserName).Value = pUserName
    End Sub

#End Region

  End Class
End Namespace
